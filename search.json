[
  {
    "objectID": "adam/adpc.html",
    "href": "adam/adpc.html",
    "title": "ADPC",
    "section": "",
    "text": "The Non-compartmental analysis (NCA) ADaM uses the CDISC Implementation Guide (https://www.cdisc.org/standards/foundational/adam/adamig-non-compartmental-analysis-input-data-v1-0). This example presented uses underlying EX and PC domains where the EX and PC domains represent data as collected and the ADPC ADaM is output. For more details see the {admiral} vignette.",
    "crumbs": [
      "ADAM",
      "ADPC"
    ]
  },
  {
    "objectID": "adam/adpc.html#first-load-packages",
    "href": "adam/adpc.html#first-load-packages",
    "title": "ADPC",
    "section": "First Load Packages",
    "text": "First Load Packages\nFirst we will load the packages required for our project. We will use {admiral} for the creation of analysis data. {admiral} requires {dplyr}, {lubridate} and {stringr}. We will use {metacore} and {metatools} to store and manipulate metadata from our specifications. We will use {xportr} to perform checks on the final data and export to a transport file.\nThe source SDTM data will come from the CDISC pilot study data stored in {pharmaversesdtm}.\n\n# Load Packages\nlibrary(admiral)\nlibrary(dplyr)\nlibrary(lubridate)\nlibrary(stringr)\nlibrary(metacore)\nlibrary(metatools)\nlibrary(xportr)\nlibrary(pharmaversesdtm)\nlibrary(pharmaverseadam)\n/home/runner/work/examples/examples/adam/adpc.R",
    "crumbs": [
      "ADAM",
      "ADPC"
    ]
  },
  {
    "objectID": "adam/adpc.html#next-load-specifications-for-metacore",
    "href": "adam/adpc.html#next-load-specifications-for-metacore",
    "title": "ADPC",
    "section": "Next Load Specifications for Metacore",
    "text": "Next Load Specifications for Metacore\nWe have saved our specifications in an Excel file and will load them into {metacore} with the metacore::spec_to_metacore() function.\n\n# ---- Load Specs for Metacore ----\n\nmetacore &lt;- spec_to_metacore(\"./metadata/pk_spec.xlsx\") %&gt;%\n  select_dataset(\"ADPC\")\n/home/runner/work/examples/examples/adam/adpc.R",
    "crumbs": [
      "ADAM",
      "ADPC"
    ]
  },
  {
    "objectID": "adam/adpc.html#load-source-datasets",
    "href": "adam/adpc.html#load-source-datasets",
    "title": "ADPC",
    "section": "Load Source Datasets",
    "text": "Load Source Datasets\nWe will load are SDTM data from {pharmaversesdtm}. The main components of this will be exposure data from EX and pharmacokinetic concentration data from PC. We will use ADSL for baseline characteristics and we will derive additional baselines from vital signs VS.\n\n# ---- Load source datasets ----\n# Load PC, EX, VS, LB and ADSL\ndata(\"pc\")\ndata(\"ex\")\ndata(\"vs\")\n\ndata(\"adsl\")\n\nex &lt;- convert_blanks_to_na(ex)\npc &lt;- convert_blanks_to_na(pc)\nvs &lt;- convert_blanks_to_na(vs)\n/home/runner/work/examples/examples/adam/adpc.R",
    "crumbs": [
      "ADAM",
      "ADPC"
    ]
  },
  {
    "objectID": "adam/adpc.html#derivations",
    "href": "adam/adpc.html#derivations",
    "title": "ADPC",
    "section": "Derivations",
    "text": "Derivations\n\nDerive PC Dates\nHere we use {admiral} functions for working with dates and we will also create a nominal time from first dose NFRLT for PC data based on PCTPTNUM.\n\n# Get list of ADSL vars required for derivations\nadsl_vars &lt;- exprs(TRTSDT, TRTSDTM, TRT01P, TRT01A)\n\npc_dates &lt;- pc %&gt;%\n  # Join ADSL with PC (need TRTSDT for ADY derivation)\n  derive_vars_merged(\n    dataset_add = adsl,\n    new_vars = adsl_vars,\n    by_vars = exprs(STUDYID, USUBJID)\n  ) %&gt;%\n  # Derive analysis date/time\n  # Impute missing time to 00:00:00\n  derive_vars_dtm(\n    new_vars_prefix = \"A\",\n    dtc = PCDTC,\n    time_imputation = \"00:00:00\"\n  ) %&gt;%\n  # Derive dates and times from date/times\n  derive_vars_dtm_to_dt(exprs(ADTM)) %&gt;%\n  derive_vars_dtm_to_tm(exprs(ADTM)) %&gt;%\n  derive_vars_dy(reference_date = TRTSDT, source_vars = exprs(ADT)) %&gt;%\n  # Derive event ID and nominal relative time from first dose (NFRLT)\n  mutate(\n    EVID = 0,\n    DRUG = PCTEST,\n    NFRLT = if_else(PCTPTNUM &lt; 0, 0, PCTPTNUM), .after = USUBJID\n  )\n/home/runner/work/examples/examples/adam/adpc.R\n\n\n\nGet Dosing Information\nHere we also create nomimal time from first dose NFRLT for EX data based on VISITDY.\n\nex_dates &lt;- ex %&gt;%\n  derive_vars_merged(\n    dataset_add = adsl,\n    new_vars = adsl_vars,\n    by_vars = exprs(STUDYID, USUBJID)\n  ) %&gt;%\n  # Keep records with nonzero dose\n  filter(EXDOSE &gt; 0) %&gt;%\n  # Add time and set missing end date to start date\n  # Impute missing time to 00:00:00\n  # Note all times are missing for dosing records in this example data\n  # Derive Analysis Start and End Dates\n  derive_vars_dtm(\n    new_vars_prefix = \"AST\",\n    dtc = EXSTDTC,\n    time_imputation = \"00:00:00\"\n  ) %&gt;%\n  derive_vars_dtm(\n    new_vars_prefix = \"AEN\",\n    dtc = EXENDTC,\n    time_imputation = \"00:00:00\"\n  ) %&gt;%\n  # Derive event ID and nominal relative time from first dose (NFRLT)\n  mutate(\n    EVID = 1,\n    NFRLT = case_when(\n      VISITDY == 1 ~ 0,\n      TRUE ~ 24 * VISITDY\n    )\n  ) %&gt;%\n  # Set missing end dates to start date\n  mutate(AENDTM = case_when(\n    is.na(AENDTM) ~ ASTDTM,\n    TRUE ~ AENDTM\n  )) %&gt;%\n  # Derive dates from date/times\n  derive_vars_dtm_to_dt(exprs(ASTDTM)) %&gt;%\n  derive_vars_dtm_to_dt(exprs(AENDTM))\n/home/runner/work/examples/examples/adam/adpc.R\n\n\n\nExpand Dosing Records\nSince there is a start date and end date for dosing records we need to expand the dosing records between the start date and end date using the function admiral::create_single_dose_dataset().\n\nex_exp &lt;- ex_dates %&gt;%\n  create_single_dose_dataset(\n    dose_freq = EXDOSFRQ,\n    start_date = ASTDT,\n    start_datetime = ASTDTM,\n    end_date = AENDT,\n    end_datetime = AENDTM,\n    nominal_time = NFRLT,\n    lookup_table = dose_freq_lookup,\n    lookup_column = CDISC_VALUE,\n    keep_source_vars = exprs(\n      STUDYID, USUBJID, EVID, EXDOSFRQ, EXDOSFRM,\n      NFRLT, EXDOSE, EXDOSU, EXTRT, ASTDT, ASTDTM, AENDT, AENDTM,\n      VISIT, VISITNUM, VISITDY,\n      TRT01A, TRT01P, DOMAIN, EXSEQ, !!!adsl_vars\n    )\n  ) %&gt;%\n  # Derive AVISIT based on nominal relative time\n  # Derive AVISITN to nominal time in whole days using integer division\n  # Define AVISIT based on nominal day\n  mutate(\n    AVISITN = NFRLT %/% 24 + 1,\n    AVISIT = paste(\"Day\", AVISITN),\n    ADTM = ASTDTM,\n    DRUG = EXTRT\n  ) %&gt;%\n  # Derive dates and times from datetimes\n  derive_vars_dtm_to_dt(exprs(ADTM)) %&gt;%\n  derive_vars_dtm_to_tm(exprs(ADTM)) %&gt;%\n  derive_vars_dtm_to_tm(exprs(ASTDTM)) %&gt;%\n  derive_vars_dtm_to_tm(exprs(AENDTM)) %&gt;%\n  derive_vars_dy(reference_date = TRTSDT, source_vars = exprs(ADT))\n/home/runner/work/examples/examples/adam/adpc.R\n\n\n\nFind First Dose\nIn this section we will find the first dose for each subject and drug.\n\nadpc_first_dose &lt;- pc_dates %&gt;%\n  derive_vars_merged(\n    dataset_add = ex_exp,\n    filter_add = (EXDOSE &gt; 0 & !is.na(ADTM)),\n    new_vars = exprs(FANLDTM = ADTM),\n    order = exprs(ADTM, EXSEQ),\n    mode = \"first\",\n    by_vars = exprs(STUDYID, USUBJID, DRUG)\n  ) %&gt;%\n  filter(!is.na(FANLDTM)) %&gt;%\n  # Derive AVISIT based on nominal relative time\n  # Derive AVISITN to nominal time in whole days using integer division\n  # Define AVISIT based on nominal day\n  mutate(\n    AVISITN = NFRLT %/% 24 + 1,\n    AVISIT = paste(\"Day\", AVISITN),\n  )\n/home/runner/work/examples/examples/adam/adpc.R\n\n\n\nFind Previous Dose and Next Dose\nUse derive_vars_joined() to find the previous dose and the next dose.\n\nadpc_prev &lt;- adpc_first_dose %&gt;%\n  derive_vars_joined(\n    dataset_add = ex_exp,\n    by_vars = exprs(USUBJID),\n    order = exprs(ADTM),\n    new_vars = exprs(\n      ADTM_prev = ADTM, EXDOSE_prev = EXDOSE, AVISIT_prev = AVISIT,\n      AENDTM_prev = AENDTM\n    ),\n    join_vars = exprs(ADTM),\n    join_type = \"all\",\n    filter_add = NULL,\n    filter_join = ADTM &gt; ADTM.join,\n    mode = \"last\",\n    check_type = \"none\"\n  )\n\nadpc_next &lt;- adpc_prev %&gt;%\n  derive_vars_joined(\n    dataset_add = ex_exp,\n    by_vars = exprs(USUBJID),\n    order = exprs(ADTM),\n    new_vars = exprs(\n      ADTM_next = ADTM, EXDOSE_next = EXDOSE, AVISIT_next = AVISIT,\n      AENDTM_next = AENDTM\n    ),\n    join_vars = exprs(ADTM),\n    join_type = \"all\",\n    filter_add = NULL,\n    filter_join = ADTM &lt;= ADTM.join,\n    mode = \"first\",\n    check_type = \"none\"\n  )\n/home/runner/work/examples/examples/adam/adpc.R\n\n\n\nFind Previous and Next Nominal Dose\nUse the same method to find the previous and next nominal times.\n\nadpc_nom_prev &lt;- adpc_next %&gt;%\n  derive_vars_joined(\n    dataset_add = ex_exp,\n    by_vars = exprs(USUBJID),\n    order = exprs(NFRLT),\n    new_vars = exprs(NFRLT_prev = NFRLT),\n    join_vars = exprs(NFRLT),\n    join_type = \"all\",\n    filter_add = NULL,\n    filter_join = NFRLT &gt; NFRLT.join,\n    mode = \"last\",\n    check_type = \"none\"\n  )\n\nadpc_nom_next &lt;- adpc_nom_prev %&gt;%\n  derive_vars_joined(\n    dataset_add = ex_exp,\n    by_vars = exprs(USUBJID),\n    order = exprs(NFRLT),\n    new_vars = exprs(NFRLT_next = NFRLT),\n    join_vars = exprs(NFRLT),\n    join_type = \"all\",\n    filter_add = NULL,\n    filter_join = NFRLT &lt;= NFRLT.join,\n    mode = \"first\",\n    check_type = \"none\"\n  )\n/home/runner/work/examples/examples/adam/adpc.R\n\n\n\nCombine PC and EX Data\nCombine PC and EX records and derive the additional relative time variables.\n\nadpc_arrlt &lt;- bind_rows(adpc_nom_next, ex_exp) %&gt;%\n  group_by(USUBJID, DRUG) %&gt;%\n  mutate(\n    FANLDTM = min(FANLDTM, na.rm = TRUE),\n    min_NFRLT = min(NFRLT_prev, na.rm = TRUE),\n    maxdate = max(ADT[EVID == 0], na.rm = TRUE), .after = USUBJID\n  ) %&gt;%\n  arrange(USUBJID, ADTM) %&gt;%\n  ungroup() %&gt;%\n  filter(ADT &lt;= maxdate) %&gt;%\n  # Derive Actual Relative Time from First Dose (AFRLT)\n  derive_vars_duration(\n    new_var = AFRLT,\n    start_date = FANLDTM,\n    end_date = ADTM,\n    out_unit = \"hours\",\n    floor_in = FALSE,\n    add_one = FALSE\n  ) %&gt;%\n  # Derive Actual Relative Time from Reference Dose (ARRLT)\n  derive_vars_duration(\n    new_var = ARRLT,\n    start_date = ADTM_prev,\n    end_date = ADTM,\n    out_unit = \"hours\",\n    floor_in = FALSE,\n    add_one = FALSE\n  ) %&gt;%\n  # Derive Actual Relative Time from Next Dose (AXRLT not kept)\n  derive_vars_duration(\n    new_var = AXRLT,\n    start_date = ADTM_next,\n    end_date = ADTM,\n    out_unit = \"hours\",\n    floor_in = FALSE,\n    add_one = FALSE\n  ) %&gt;%\n  mutate(\n    ARRLT = case_when(\n      EVID == 1 ~ 0,\n      is.na(ARRLT) ~ AXRLT,\n      TRUE ~ ARRLT\n    ),\n    # Derive Reference Dose Date\n    PCRFTDTM = case_when(\n      EVID == 1 ~ ADTM,\n      is.na(ADTM_prev) ~ ADTM_next,\n      TRUE ~ ADTM_prev\n    )\n  ) %&gt;%\n  # Derive dates and times from datetimes\n  derive_vars_dtm_to_dt(exprs(FANLDTM)) %&gt;%\n  derive_vars_dtm_to_tm(exprs(FANLDTM)) %&gt;%\n  derive_vars_dtm_to_dt(exprs(PCRFTDTM)) %&gt;%\n  derive_vars_dtm_to_tm(exprs(PCRFTDTM))\n/home/runner/work/examples/examples/adam/adpc.R\n\n\n\nDerive Nominal Reference\nFor nominal relative times we calculate the nominal relative time to reference dose NRRLT.\n\n# Derive Nominal Relative Time from Reference Dose (NRRLT)\n\nadpc_nrrlt &lt;- adpc_arrlt %&gt;%\n  mutate(\n    NRRLT = case_when(\n      EVID == 1 ~ 0,\n      is.na(NFRLT_prev) ~ NFRLT - min_NFRLT,\n      TRUE ~ NFRLT - NFRLT_prev\n    ),\n    NXRLT = case_when(\n      EVID == 1 ~ 0,\n      TRUE ~ NFRLT - NFRLT_next\n    )\n  )\n/home/runner/work/examples/examples/adam/adpc.R\n\n\n\nDerive Analysis Variables\nHere we derive the analysis variables such as AVAL and ATPTREF.\n\nadpc_aval &lt;- adpc_nrrlt %&gt;%\n  mutate(\n    PARCAT1 = PCSPEC,\n    ATPTN = case_when(\n      EVID == 1 ~ 0,\n      TRUE ~ PCTPTNUM\n    ),\n    ATPT = case_when(\n      EVID == 1 ~ \"Dose\",\n      TRUE ~ PCTPT\n    ),\n    ATPTREF = case_when(\n      EVID == 1 ~ AVISIT,\n      is.na(AVISIT_prev) ~ AVISIT_next,\n      TRUE ~ AVISIT_prev\n    ),\n    # Derive baseline flag for pre-dose records\n    ABLFL = case_when(\n      ATPT == \"Pre-dose\" ~ \"Y\",\n      TRUE ~ NA_character_\n    ),\n    # Derive BASETYPE\n    BASETYPE = paste(ATPTREF, \"Baseline\"),\n\n    # Derive Actual Dose\n    DOSEA = case_when(\n      EVID == 1 ~ EXDOSE,\n      is.na(EXDOSE_prev) ~ EXDOSE_next,\n      TRUE ~ EXDOSE_prev\n    ),\n    # Derive Planned Dose\n    DOSEP = case_when(\n      TRT01P == \"Xanomeline High Dose\" ~ 81,\n      TRT01P == \"Xanomeline Low Dose\" ~ 54\n    ),\n    DOSEU = \"mg\",\n  ) %&gt;%\n  # Derive relative time units\n  mutate(\n    FRLTU = \"h\",\n    RRLTU = \"h\",\n    # Derive PARAMCD\n    PARAMCD = coalesce(PCTESTCD, \"DOSE\"),\n    ALLOQ = PCLLOQ,\n    # Derive AVAL\n    AVAL = case_when(\n      EVID == 1 ~ EXDOSE,\n      PCSTRESC == \"&lt;BLQ\" & NFRLT == 0 ~ 0,\n      PCSTRESC == \"&lt;BLQ\" & NFRLT &gt; 0 ~ 0.5 * ALLOQ,\n      TRUE ~ PCSTRESN\n    ),\n    AVALU = case_when(\n      EVID == 1 ~ EXDOSU,\n      TRUE ~ PCSTRESU\n    ),\n    AVALCAT1 = if_else(PCSTRESC == \"&lt;BLQ\", PCSTRESC, prettyNum(signif(AVAL, digits = 3))),\n  ) %&gt;%\n  # Add SRCSEQ\n  mutate(\n    SRCDOM = DOMAIN,\n    SRCVAR = \"SEQ\",\n    SRCSEQ = coalesce(PCSEQ, EXSEQ)\n  )\n/home/runner/work/examples/examples/adam/adpc.R\n\n\n\nDerive DTYPE Copy Records\nThe CDISC ADaM Implementation Guide for Non-compartmental Analysis uses duplicated records for analysis when a record needs to be used in more than one way. In this example the 24 hour post-dose record will also be used a the pre-dose record for the “Day 2” dose.\n\ndtype &lt;- adpc_aval %&gt;%\n  filter(NFRLT &gt; 0 & NXRLT == 0 & EVID == 0 & !is.na(AVISIT_next)) %&gt;%\n  select(-PCRFTDT, -PCRFTTM) %&gt;%\n  # Re-derive variables in for DTYPE copy records\n  mutate(\n    ABLFL = NA_character_,\n    ATPTREF = AVISIT_next,\n    ARRLT = AXRLT,\n    NRRLT = NXRLT,\n    PCRFTDTM = ADTM_next,\n    DOSEA = EXDOSE_next,\n    BASETYPE = paste(AVISIT_next, \"Baseline\"),\n    ATPT = \"Pre-dose\",\n    ATPTN = NFRLT,\n    ABLFL = \"Y\",\n    DTYPE = \"COPY\"\n  ) %&gt;%\n  derive_vars_dtm_to_dt(exprs(PCRFTDTM)) %&gt;%\n  derive_vars_dtm_to_tm(exprs(PCRFTDTM))\n/home/runner/work/examples/examples/adam/adpc.R\n\n\n\nCombine Original and DTYPE Copy\nNow the duplicated records are combined with the original records.\n\nadpc_dtype &lt;- bind_rows(adpc_aval, dtype) %&gt;%\n  arrange(STUDYID, USUBJID, BASETYPE, ADTM, NFRLT) %&gt;%\n  mutate(\n    # Derive MRRLT, ANL01FL and ANL02FL\n    MRRLT = if_else(ARRLT &lt; 0, 0, ARRLT),\n    ANL01FL = \"Y\",\n    ANL02FL = if_else(is.na(DTYPE), \"Y\", NA_character_),\n  )\n/home/runner/work/examples/examples/adam/adpc.R\n\n\n\nDerive BASE and CHG\n\n# ---- Derive BASE and Calculate Change from Baseline ----\n\nadpc_base &lt;- adpc_dtype %&gt;%\n  derive_var_base(\n    by_vars = exprs(STUDYID, USUBJID, PARAMCD, PARCAT1, BASETYPE),\n    source_var = AVAL,\n    new_var = BASE,\n    filter = ABLFL == \"Y\"\n  )\n\nadpc_chg &lt;- derive_var_chg(adpc_base)\n/home/runner/work/examples/examples/adam/adpc.R\n\n\n\nDerive PARAM with {metatools}\nHere we derive PARAM and PARAMN using create_var_from_codelist() from {metatools}.\n\n# ---- Add ASEQ ----\n\nadpc_aseq &lt;- adpc_chg %&gt;%\n  # Calculate ASEQ\n  derive_var_obs_number(\n    new_var = ASEQ,\n    by_vars = exprs(STUDYID, USUBJID),\n    order = exprs(ADTM, BASETYPE, EVID, AVISITN, ATPTN, PARCAT1, DTYPE),\n    check_type = \"error\"\n  ) %&gt;%\n  # Derive PARAM and PARAMN using metatools\n  create_var_from_codelist(metacore, input_var = PARAMCD, out_var = PARAM) %&gt;%\n  create_var_from_codelist(metacore, input_var = PARAMCD, out_var = PARAMN)\n/home/runner/work/examples/examples/adam/adpc.R\n\n\n\nDerive Additional Baselines\nHere we derive additional baseline values from VS for baseline height HTBL and weight WTBL and compute the body mass index (BMI) with compute_bmi().\n\n#---- Derive additional baselines from VS ----\n\nadpc_baselines &lt;- adpc_aseq %&gt;%\n  derive_vars_merged(\n    dataset_add = vs,\n    filter_add = VSTESTCD == \"HEIGHT\",\n    by_vars = exprs(STUDYID, USUBJID),\n    new_vars = exprs(HTBL = VSSTRESN, HTBLU = VSSTRESU)\n  ) %&gt;%\n  derive_vars_merged(\n    dataset_add = vs,\n    filter_add = VSTESTCD == \"WEIGHT\" & VSBLFL == \"Y\",\n    by_vars = exprs(STUDYID, USUBJID),\n    new_vars = exprs(WTBL = VSSTRESN, WTBLU = VSSTRESU)\n  ) %&gt;%\n  mutate(\n    BMIBL = compute_bmi(height = HTBL, weight = WTBL),\n    BMIBLU = \"kg/m^2\"\n  )\n/home/runner/work/examples/examples/adam/adpc.R\n\n\n\nCombine with ADSL\nIf needed, the other ADSL variables can now be added:\n\n# ---- Add all ADSL variables ----\n\n# Add all ADSL variables\nadpc_prefinal &lt;- adpc_baselines %&gt;%\n  derive_vars_merged(\n    dataset_add = select(adsl, !!!negate_vars(adsl_vars)),\n    by_vars = exprs(STUDYID, USUBJID)\n  )\n/home/runner/work/examples/examples/adam/adpc.R",
    "crumbs": [
      "ADAM",
      "ADPC"
    ]
  },
  {
    "objectID": "adam/adpc.html#check-data-with-metacore-and-metatools",
    "href": "adam/adpc.html#check-data-with-metacore-and-metatools",
    "title": "ADPC",
    "section": "Check Data With metacore and metatools",
    "text": "Check Data With metacore and metatools\nWe use {metacore} objects with {metatools} functions to perform a number of checks on the data. We will drop variables not in the specs and make sure all the variables from the specs are included.\n\n# Apply metadata and perform associated checks ----\nadpc &lt;- adpc_prefinal %&gt;%\n  drop_unspec_vars(metacore) %&gt;% # Drop unspecified variables from specs\n  check_variables(metacore) %&gt;% # Check all variables specified are present and no more\n  check_ct_data(metacore) %&gt;% # Checks all variables with CT only contain values within the CT\n  order_cols(metacore) %&gt;% # Orders the columns according to the spec\n  sort_by_key(metacore) # Sorts the rows by the sort keys\n/home/runner/work/examples/examples/adam/adpc.R",
    "crumbs": [
      "ADAM",
      "ADPC"
    ]
  },
  {
    "objectID": "adam/adpc.html#apply-labels-and-formats-with-xportr",
    "href": "adam/adpc.html#apply-labels-and-formats-with-xportr",
    "title": "ADPC",
    "section": "Apply Labels and Formats with xportr",
    "text": "Apply Labels and Formats with xportr\nUsing {xportr} we check variable type, assign variable lenght, add variable labels, add variable formats, and save a transport file. At the end you could add a call to xportr::xportr_write() to produce the XPT file.\n\ndir &lt;- tempdir() # Change to whichever directory you want to save the dataset in\n\nadpc_xpt &lt;- adpc %&gt;%\n  xportr_type(metacore, domain = \"ADPC\") %&gt;% # Coerce variable type to match spec\n  xportr_length(metacore) %&gt;% # Assigns SAS length from a variable level metadata\n  xportr_label(metacore) %&gt;% # Assigns variable label from metacore specifications\n  xportr_format(metacore) %&gt;% # Assigns variable format from metacore specifications\n  xportr_df_label(metacore) %&gt;% # Assigns dataset label from metacore specifications\n  xportr_write(file.path(dir, \"adpc.xpt\")) # Write xpt v5 transport file\n/home/runner/work/examples/examples/adam/adpc.R",
    "crumbs": [
      "ADAM",
      "ADPC"
    ]
  },
  {
    "objectID": "adam/adsl.html",
    "href": "adam/adsl.html",
    "title": "ADSL",
    "section": "",
    "text": "This guide will show you how four pharmaverse packages, along with some from tidyverse, can be used to create an ADaM such as ADSL end-to-end, using {pharmaversesdtm} SDTM data as input.\nThe four packages used with a brief description of their purpose are as follows:\n\n{metacore}: provides harmonized metadata/specifications object.\n{metatools}: uses the provided metadata to build/enhance and check the dataset.\n{admiral}: provides the ADaM derivations.\n{xportr}: delivers the SAS transport file (XPT) and eSub checks.\n\nIt is important to understand {metacore} objects by reading through the above linked package site, as these are fundamental to being able to use {metatools} and {xportr}. Each company may need to build a specification reader to create these objects from their source standard specification templates.",
    "crumbs": [
      "ADAM",
      "ADSL"
    ]
  },
  {
    "objectID": "adam/adsl.html#introduction",
    "href": "adam/adsl.html#introduction",
    "title": "ADSL",
    "section": "",
    "text": "This guide will show you how four pharmaverse packages, along with some from tidyverse, can be used to create an ADaM such as ADSL end-to-end, using {pharmaversesdtm} SDTM data as input.\nThe four packages used with a brief description of their purpose are as follows:\n\n{metacore}: provides harmonized metadata/specifications object.\n{metatools}: uses the provided metadata to build/enhance and check the dataset.\n{admiral}: provides the ADaM derivations.\n{xportr}: delivers the SAS transport file (XPT) and eSub checks.\n\nIt is important to understand {metacore} objects by reading through the above linked package site, as these are fundamental to being able to use {metatools} and {xportr}. Each company may need to build a specification reader to create these objects from their source standard specification templates.",
    "crumbs": [
      "ADAM",
      "ADSL"
    ]
  },
  {
    "objectID": "adam/adsl.html#load-data-and-required-pharmaverse-packages",
    "href": "adam/adsl.html#load-data-and-required-pharmaverse-packages",
    "title": "ADSL",
    "section": "Load Data and Required pharmaverse Packages",
    "text": "Load Data and Required pharmaverse Packages\nThe first step is to load our pharmaverse packages and input data.\n\nlibrary(metacore)\nlibrary(metatools)\nlibrary(pharmaversesdtm)\nlibrary(admiral)\nlibrary(xportr)\nlibrary(dplyr)\nlibrary(tidyr)\nlibrary(lubridate)\nlibrary(stringr)\n\n# Read in input SDTM data \ndata(\"dm\")\ndata(\"ex\")\n/home/runner/work/examples/examples/adam/adsl.R\n\nNext we need to load the specification file in the form of a {metacore} object.\n\n# Read in metacore object \nload(metacore_example(\"pilot_ADaM.rda\"))\nmetacore &lt;- metacore %&gt;% \n   select_dataset(\"ADSL\")\n/home/runner/work/examples/examples/adam/adsl.R\n\nHere is an example of how a {metacore} object looks showing variable level metadata:\n\nmetacore$ds_vars\n\n# A tibble: 49 × 7\n   dataset variable key_seq order keep  core  supp_flag\n   &lt;chr&gt;   &lt;chr&gt;      &lt;int&gt; &lt;int&gt; &lt;lgl&gt; &lt;chr&gt; &lt;lgl&gt;    \n 1 ADSL    STUDYID       NA     1 FALSE &lt;NA&gt;  NA       \n 2 ADSL    USUBJID        1     2 FALSE &lt;NA&gt;  NA       \n 3 ADSL    SUBJID        NA     3 FALSE &lt;NA&gt;  NA       \n 4 ADSL    SITEID        NA     4 FALSE &lt;NA&gt;  NA       \n 5 ADSL    SITEGR1       NA     5 FALSE &lt;NA&gt;  NA       \n 6 ADSL    ARM           NA     6 FALSE &lt;NA&gt;  NA       \n 7 ADSL    TRT01P        NA     7 FALSE &lt;NA&gt;  NA       \n 8 ADSL    TRT01PN       NA     8 FALSE &lt;NA&gt;  NA       \n 9 ADSL    TRT01A        NA     9 FALSE &lt;NA&gt;  NA       \n10 ADSL    TRT01AN       NA    10 FALSE &lt;NA&gt;  NA       \n# ℹ 39 more rows\n\n/home/runner/work/examples/examples/adam/adsl.R",
    "crumbs": [
      "ADAM",
      "ADSL"
    ]
  },
  {
    "objectID": "adam/adsl.html#start-building-derivations",
    "href": "adam/adsl.html#start-building-derivations",
    "title": "ADSL",
    "section": "Start Building Derivations",
    "text": "Start Building Derivations\nThe first derivation step we are going to do is to pull through all the columns that come directly from the SDTM datasets. You might know which datasets you are going to pull from directly already, but if you don’t you can call metatools::build_from_derived() with just an empty list and the error will tell you which datasets you need to supply.\n\nbuild_from_derived(metacore, list(), predecessor_only = FALSE)\n\nError in build_from_derived(metacore, list(), predecessor_only = FALSE): Not all datasets provided. Please pass the following dataset(s):\nDM\n\n/home/runner/work/examples/examples/adam/adsl.R\n\nIn this case all the columns come from DM so that is the only dataset we will pass into metatools::build_from_derived(). The resulting dataset has all the columns combined and any columns that needed renaming between SDTM and ADaM are renamed.\n\nadsl_preds &lt;- build_from_derived(metacore, \n                                 ds_list = list(\"dm\" = dm), \n                                 predecessor_only = FALSE, keep = TRUE)\nhead(adsl_preds, n=10)\n\n# A tibble: 10 × 14\n   STUDYID      USUBJID SUBJID SITEID ARM     AGE AGEU  RACE  SEX   ETHNIC DTHFL\n   &lt;chr&gt;        &lt;chr&gt;   &lt;chr&gt;  &lt;chr&gt;  &lt;chr&gt; &lt;dbl&gt; &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; &lt;chr&gt;  &lt;chr&gt;\n 1 CDISCPILOT01 01-701… 1015   701    Plac…    63 YEARS WHITE F     HISPA… &lt;NA&gt; \n 2 CDISCPILOT01 01-701… 1023   701    Plac…    64 YEARS WHITE M     HISPA… &lt;NA&gt; \n 3 CDISCPILOT01 01-701… 1028   701    Xano…    71 YEARS WHITE M     NOT H… &lt;NA&gt; \n 4 CDISCPILOT01 01-701… 1033   701    Xano…    74 YEARS WHITE M     NOT H… &lt;NA&gt; \n 5 CDISCPILOT01 01-701… 1034   701    Xano…    77 YEARS WHITE F     NOT H… &lt;NA&gt; \n 6 CDISCPILOT01 01-701… 1047   701    Plac…    85 YEARS WHITE F     NOT H… &lt;NA&gt; \n 7 CDISCPILOT01 01-701… 1057   701    Scre…    59 YEARS WHITE F     HISPA… &lt;NA&gt; \n 8 CDISCPILOT01 01-701… 1097   701    Xano…    68 YEARS WHITE M     NOT H… &lt;NA&gt; \n 9 CDISCPILOT01 01-701… 1111   701    Xano…    81 YEARS WHITE F     NOT H… &lt;NA&gt; \n10 CDISCPILOT01 01-701… 1115   701    Xano…    84 YEARS WHITE M     NOT H… &lt;NA&gt; \n# ℹ 3 more variables: RFSTDTC &lt;chr&gt;, RFENDTC &lt;chr&gt;, TRT01P &lt;chr&gt;\n\n/home/runner/work/examples/examples/adam/adsl.R\n\nNow we have the base dataset, we can start to create some variables. We can start with creating the subgroups using the controlled terminology, in this case AGEGR1. The metacore object holds all the metadata needed to make ADSL. Part of that metadata is the controlled terminology, which can help automate the creation of subgroups. We can look into the {metacore} object and see the controlled terminology for AGEGR1.\n\nget_control_term(metacore, variable = AGEGR1)\n\n# A tibble: 3 × 2\n  code  decode\n  &lt;chr&gt; &lt;chr&gt; \n1 &lt;65   &lt;65   \n2 65-80 65-80 \n3 &gt;80   &gt;80   \n\n/home/runner/work/examples/examples/adam/adsl.R\n\nBecause this controlled terminology is written in a fairly standard format we can automate the creation of AGEGR1. The function metatools::create_cat_var() takes in a {metacore} object, a reference variable - in this case AGE because that is the continuous variable AGEGR1 is created from, and the name of the sub-grouped variable. It will take the controlled terminology from the sub-grouped variable and group the reference variables accordingly.\nUsing a similar philosophy we can create the numeric version of RACE using the controlled terminology stored in the {metacore} object with the metatools::create_var_from_codelist() function.\n\nadsl_ct &lt;- adsl_preds %&gt;% \n   create_cat_var(metacore, ref_var = AGE, \n                  grp_var = AGEGR1, num_grp_var = AGEGR1N) %&gt;% \n   create_var_from_codelist(metacore = metacore, \n                            input_var = RACE, \n                            out_var = RACEN) %&gt;% \n   #Removing screen failures from ARM and TRT01P to match the define and FDA guidence\n   mutate(ARM = if_else(ARM == \"Screen Failure\", NA_character_, ARM),\n          TRT01P = if_else(TRT01P == \"Screen Failure\", NA_character_, TRT01P)\n   )\n\nhead(adsl_ct, n=10)\n\n# A tibble: 10 × 17\n   STUDYID      USUBJID SUBJID SITEID ARM     AGE AGEU  RACE  SEX   ETHNIC DTHFL\n   &lt;chr&gt;        &lt;chr&gt;   &lt;chr&gt;  &lt;chr&gt;  &lt;chr&gt; &lt;dbl&gt; &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; &lt;chr&gt;  &lt;chr&gt;\n 1 CDISCPILOT01 01-701… 1015   701    Plac…    63 YEARS WHITE F     HISPA… &lt;NA&gt; \n 2 CDISCPILOT01 01-701… 1023   701    Plac…    64 YEARS WHITE M     HISPA… &lt;NA&gt; \n 3 CDISCPILOT01 01-701… 1028   701    Xano…    71 YEARS WHITE M     NOT H… &lt;NA&gt; \n 4 CDISCPILOT01 01-701… 1033   701    Xano…    74 YEARS WHITE M     NOT H… &lt;NA&gt; \n 5 CDISCPILOT01 01-701… 1034   701    Xano…    77 YEARS WHITE F     NOT H… &lt;NA&gt; \n 6 CDISCPILOT01 01-701… 1047   701    Plac…    85 YEARS WHITE F     NOT H… &lt;NA&gt; \n 7 CDISCPILOT01 01-701… 1057   701    &lt;NA&gt;     59 YEARS WHITE F     HISPA… &lt;NA&gt; \n 8 CDISCPILOT01 01-701… 1097   701    Xano…    68 YEARS WHITE M     NOT H… &lt;NA&gt; \n 9 CDISCPILOT01 01-701… 1111   701    Xano…    81 YEARS WHITE F     NOT H… &lt;NA&gt; \n10 CDISCPILOT01 01-701… 1115   701    Xano…    84 YEARS WHITE M     NOT H… &lt;NA&gt; \n# ℹ 6 more variables: RFSTDTC &lt;chr&gt;, RFENDTC &lt;chr&gt;, TRT01P &lt;chr&gt;, AGEGR1 &lt;chr&gt;,\n#   AGEGR1N &lt;dbl&gt;, RACEN &lt;dbl&gt;\n\n/home/runner/work/examples/examples/adam/adsl.R\n\nNow we have sorted out what we can easily do with controlled terminology it is time to start deriving some variables. Here you could refer directly to using the {admiral} template and vignette in practice, but for the purpose of this end-to-end ADaM vignette we will share a few exposure derivations from there. We derive the start and end of treatment (which requires dates to first be converted from DTC to DTM), the treatment duration, and the safety population flag.\n\nex_ext &lt;- ex %&gt;%\n  derive_vars_dtm(\n    dtc = EXSTDTC,\n    new_vars_prefix = \"EXST\"\n  ) %&gt;%\n  derive_vars_dtm(\n    dtc = EXENDTC,\n    new_vars_prefix = \"EXEN\",\n    time_imputation = \"last\"\n  )\n\nadsl_raw &lt;- adsl_ct %&gt;%\n  derive_vars_merged(\n    dataset_add = ex_ext,\n    filter_add = (EXDOSE &gt; 0 |\n      (EXDOSE == 0 &\n        str_detect(EXTRT, \"PLACEBO\"))) & nchar(EXSTDTC) &gt;= 10,\n    new_vars = exprs(TRTSDTM = EXSTDTM),\n    order = exprs(EXSTDTM, EXSEQ),\n    mode = \"first\",\n    by_vars = exprs(STUDYID, USUBJID)\n  ) %&gt;%\n  derive_vars_merged(\n    dataset_add = ex_ext,\n    filter_add = (EXDOSE &gt; 0 |\n      (EXDOSE == 0 &\n        str_detect(EXTRT, \"PLACEBO\"))) & nchar(EXENDTC) &gt;= 10,\n    new_vars = exprs(TRTEDTM = EXENDTM),\n    order = exprs(EXENDTM, EXSEQ),\n    mode = \"last\",\n    by_vars = exprs(STUDYID, USUBJID)\n  ) %&gt;%\n   derive_vars_dtm_to_dt(source_vars = exprs(TRTSDTM, TRTEDTM)) %&gt;%  #Convert Datetime variables to date \n   derive_var_trtdurd() %&gt;% \n   derive_var_merged_exist_flag(\n     dataset_add = ex,\n     by_vars = exprs(STUDYID, USUBJID),\n     new_var = SAFFL,\n     condition = (EXDOSE &gt; 0 | (EXDOSE == 0 & str_detect(EXTRT, \"PLACEBO\")))\n   ) %&gt;% \n   drop_unspec_vars(metacore) #This will drop any columns that aren't specified in the metacore object\n\nThe following variable(s) were dropped:\n  TRTSDTM\n  TRTEDTM\n\nhead(adsl_raw, n=10)\n\n# A tibble: 10 × 21\n   STUDYID      USUBJID SUBJID SITEID ARM     AGE AGEU  RACE  SEX   ETHNIC DTHFL\n   &lt;chr&gt;        &lt;chr&gt;   &lt;chr&gt;  &lt;chr&gt;  &lt;chr&gt; &lt;dbl&gt; &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; &lt;chr&gt;  &lt;chr&gt;\n 1 CDISCPILOT01 01-701… 1015   701    Plac…    63 YEARS WHITE F     HISPA… &lt;NA&gt; \n 2 CDISCPILOT01 01-701… 1023   701    Plac…    64 YEARS WHITE M     HISPA… &lt;NA&gt; \n 3 CDISCPILOT01 01-701… 1028   701    Xano…    71 YEARS WHITE M     NOT H… &lt;NA&gt; \n 4 CDISCPILOT01 01-701… 1033   701    Xano…    74 YEARS WHITE M     NOT H… &lt;NA&gt; \n 5 CDISCPILOT01 01-701… 1034   701    Xano…    77 YEARS WHITE F     NOT H… &lt;NA&gt; \n 6 CDISCPILOT01 01-701… 1047   701    Plac…    85 YEARS WHITE F     NOT H… &lt;NA&gt; \n 7 CDISCPILOT01 01-701… 1057   701    &lt;NA&gt;     59 YEARS WHITE F     HISPA… &lt;NA&gt; \n 8 CDISCPILOT01 01-701… 1097   701    Xano…    68 YEARS WHITE M     NOT H… &lt;NA&gt; \n 9 CDISCPILOT01 01-701… 1111   701    Xano…    81 YEARS WHITE F     NOT H… &lt;NA&gt; \n10 CDISCPILOT01 01-701… 1115   701    Xano…    84 YEARS WHITE M     NOT H… &lt;NA&gt; \n# ℹ 10 more variables: RFSTDTC &lt;chr&gt;, RFENDTC &lt;chr&gt;, TRT01P &lt;chr&gt;,\n#   AGEGR1 &lt;chr&gt;, AGEGR1N &lt;dbl&gt;, RACEN &lt;dbl&gt;, TRTSDT &lt;date&gt;, TRTEDT &lt;date&gt;,\n#   TRTDURD &lt;dbl&gt;, SAFFL &lt;chr&gt;\n\n/home/runner/work/examples/examples/adam/adsl.R",
    "crumbs": [
      "ADAM",
      "ADSL"
    ]
  },
  {
    "objectID": "adam/adsl.html#apply-metadata-to-create-an-esub-xpt-and-perform-associated-checks",
    "href": "adam/adsl.html#apply-metadata-to-create-an-esub-xpt-and-perform-associated-checks",
    "title": "ADSL",
    "section": "Apply Metadata to Create an eSub XPT and Perform Associated Checks",
    "text": "Apply Metadata to Create an eSub XPT and Perform Associated Checks\nNow we have all the variables defined we can run some checks before applying the necessary formatting. The top four functions performing checks and sorting/ordering come from {metatools}, whereas the others focused around applying attributes to prepare for XPT come from {xportr}. At the end you could add a call to xportr::xportr_write() to produce the XPT file.\n\nadsl_raw %&gt;% \n   check_variables(metacore) %&gt;% # Check all variables specified are present and no more\n   check_ct_data(metacore, na_acceptable = TRUE) %&gt;% # Checks all variables with CT only contain values within the CT\n   order_cols(metacore) %&gt;% # Orders the columns according to the spec\n   sort_by_key(metacore) %&gt;% # Sorts the rows by the sort keys \n   xportr_type(metacore, domain = \"ADSL\") %&gt;% # Coerce variable type to match spec\n   xportr_length(metacore) %&gt;% # Assigns SAS length from a variable level metadata \n   xportr_label(metacore) %&gt;% # Assigns variable label from metacore specifications \n   xportr_df_label(metacore) # Assigns dataset label from metacore specifications\n\n# A tibble: 306 × 49\n   STUDYID     USUBJID SUBJID SITEID SITEGR1 ARM   TRT01P TRT01PN TRT01A TRT01AN\n   &lt;chr&gt;       &lt;chr&gt;   &lt;chr&gt;  &lt;chr&gt;  &lt;chr&gt;   &lt;chr&gt; &lt;chr&gt;    &lt;dbl&gt; &lt;chr&gt;    &lt;dbl&gt;\n 1 CDISCPILOT… 01-701… 1015   701    &lt;NA&gt;    Plac… Place…      NA &lt;NA&gt;        NA\n 2 CDISCPILOT… 01-701… 1023   701    &lt;NA&gt;    Plac… Place…      NA &lt;NA&gt;        NA\n 3 CDISCPILOT… 01-701… 1028   701    &lt;NA&gt;    Xano… Xanom…      NA &lt;NA&gt;        NA\n 4 CDISCPILOT… 01-701… 1033   701    &lt;NA&gt;    Xano… Xanom…      NA &lt;NA&gt;        NA\n 5 CDISCPILOT… 01-701… 1034   701    &lt;NA&gt;    Xano… Xanom…      NA &lt;NA&gt;        NA\n 6 CDISCPILOT… 01-701… 1047   701    &lt;NA&gt;    Plac… Place…      NA &lt;NA&gt;        NA\n 7 CDISCPILOT… 01-701… 1057   701    &lt;NA&gt;    &lt;NA&gt;  &lt;NA&gt;        NA &lt;NA&gt;        NA\n 8 CDISCPILOT… 01-701… 1097   701    &lt;NA&gt;    Xano… Xanom…      NA &lt;NA&gt;        NA\n 9 CDISCPILOT… 01-701… 1111   701    &lt;NA&gt;    Xano… Xanom…      NA &lt;NA&gt;        NA\n10 CDISCPILOT… 01-701… 1115   701    &lt;NA&gt;    Xano… Xanom…      NA &lt;NA&gt;        NA\n# ℹ 296 more rows\n# ℹ 39 more variables: TRTSDT &lt;date&gt;, TRTEDT &lt;date&gt;, TRTDURD &lt;dbl&gt;,\n#   AVGDD &lt;dbl&gt;, CUMDOSE &lt;dbl&gt;, AGE &lt;dbl&gt;, AGEGR1 &lt;chr&gt;, AGEGR1N &lt;dbl&gt;,\n#   AGEU &lt;chr&gt;, RACE &lt;chr&gt;, RACEN &lt;dbl&gt;, SEX &lt;chr&gt;, ETHNIC &lt;chr&gt;, SAFFL &lt;chr&gt;,\n#   ITTFL &lt;chr&gt;, EFFFL &lt;chr&gt;, COMP8FL &lt;chr&gt;, COMP16FL &lt;chr&gt;, COMP24FL &lt;chr&gt;,\n#   DISCONFL &lt;chr&gt;, DSRAEFL &lt;chr&gt;, DTHFL &lt;chr&gt;, BMIBL &lt;dbl&gt;, BMIBLGR1 &lt;chr&gt;,\n#   HEIGHTBL &lt;dbl&gt;, WEIGHTBL &lt;dbl&gt;, EDUCLVL &lt;dbl&gt;, DISONSDT &lt;dbl&gt;, …\n\n/home/runner/work/examples/examples/adam/adsl.R",
    "crumbs": [
      "ADAM",
      "ADSL"
    ]
  },
  {
    "objectID": "session.html",
    "href": "session.html",
    "title": "Session Info",
    "section": "",
    "text": "Session Info\n\nsessionInfo()\n\nR version 4.4.0 (2024-04-24)\nPlatform: x86_64-pc-linux-gnu\nRunning under: Ubuntu 22.04.4 LTS\n\nMatrix products: default\nBLAS:   /usr/lib/x86_64-linux-gnu/openblas-pthread/libblas.so.3 \nLAPACK: /usr/lib/x86_64-linux-gnu/openblas-pthread/libopenblasp-r0.3.20.so;  LAPACK version 3.10.0\n\nlocale:\n [1] LC_CTYPE=C.UTF-8       LC_NUMERIC=C           LC_TIME=C.UTF-8       \n [4] LC_COLLATE=C.UTF-8     LC_MONETARY=C.UTF-8    LC_MESSAGES=C.UTF-8   \n [7] LC_PAPER=C.UTF-8       LC_NAME=C              LC_ADDRESS=C          \n[10] LC_TELEPHONE=C         LC_MEASUREMENT=C.UTF-8 LC_IDENTIFICATION=C   \n\ntime zone: UTC\ntzcode source: system (glibc)\n\nattached base packages:\n[1] stats     graphics  grDevices utils     datasets  methods   base     \n\nloaded via a namespace (and not attached):\n [1] compiler_4.4.0    fastmap_1.2.0     cli_3.6.2         tools_4.4.0      \n [5] htmltools_0.5.8.1 yaml_2.3.8        rmarkdown_2.27    knitr_1.47       \n [9] jsonlite_1.8.8    xfun_0.44         digest_0.6.35     rlang_1.1.4      \n[13] evaluate_0.23    \n\n\n\n\nInstalled Packages\n\nknitr::kable(installed.packages()[, c(\"Package\", \"Version\")], row.names = FALSE)\n\n\n\n\nPackage\nVersion\n\n\n\n\nabind\n1.4-5\n\n\nadmiral\n1.0.2\n\n\nadmiraldev\n1.0.0\n\n\nbackports\n1.5.0\n\n\nbase64enc\n0.1-3\n\n\nbit\n4.0.5\n\n\nbit64\n4.0.5\n\n\nbrio\n1.1.5\n\n\nbroom\n1.0.6\n\n\nbslib\n0.7.0\n\n\ncachem\n1.1.0\n\n\ncallr\n3.7.6\n\n\ncar\n3.1-2\n\n\ncarData\n3.0-5\n\n\ncellranger\n1.1.0\n\n\ncheckmate\n2.3.1\n\n\ncli\n3.6.2\n\n\nclipr\n0.8.0\n\n\ncolorspace\n2.1-0\n\n\ncommon\n1.1.3\n\n\ncommonmark\n1.9.1\n\n\ncowplot\n1.1.3\n\n\ncpp11\n0.4.7\n\n\ncrayon\n1.5.2\n\n\ndesc\n1.4.3\n\n\ndiffobj\n0.3.5\n\n\ndigest\n0.6.35\n\n\ndplyr\n1.1.4\n\n\nellipsis\n0.3.2\n\n\nemmeans\n1.10.2\n\n\nestimability\n1.5.1\n\n\nevaluate\n0.23\n\n\nfansi\n1.0.6\n\n\nfarver\n2.1.2\n\n\nfastmap\n1.2.0\n\n\nfontawesome\n0.5.2\n\n\nforcats\n1.0.0\n\n\nformatters\n0.5.6\n\n\nfs\n1.6.4\n\n\ngenerics\n0.1.3\n\n\nggplot2\n3.5.1\n\n\nglue\n1.7.0\n\n\ngridExtra\n2.3\n\n\ngtable\n0.3.5\n\n\nhaven\n2.5.4\n\n\nhighr\n0.11\n\n\nhms\n1.1.3\n\n\nhtmltools\n0.5.8.1\n\n\nhttpuv\n1.6.15\n\n\nisoband\n0.2.7\n\n\njquerylib\n0.1.4\n\n\njsonlite\n1.8.8\n\n\nknitr\n1.47\n\n\nlabeling\n0.4.3\n\n\nlater\n1.3.2\n\n\nlifecycle\n1.0.4\n\n\nlme4\n1.1-35.3\n\n\nlogr\n1.3.8\n\n\nlogrx\n0.3.1\n\n\nlubridate\n1.9.3\n\n\nmagrittr\n2.0.3\n\n\nMatrixModels\n0.5-3\n\n\nmemoise\n2.0.1\n\n\nmetacore\n0.1.3\n\n\nmetatools\n0.1.5\n\n\nmime\n0.12\n\n\nminiUI\n0.1.1.1\n\n\nminqa\n1.2.7\n\n\nmunsell\n0.5.1\n\n\nmvtnorm\n1.2-5\n\n\nnloptr\n2.0.3\n\n\nnumDeriv\n2016.8-1.1\n\n\npbkrtest\n0.5.2\n\n\npharmaverseadam\n0.2.0\n\n\npharmaversesdtm\n0.2.0\n\n\npillar\n1.9.0\n\n\npkgbuild\n1.4.4\n\n\npkgconfig\n2.0.3\n\n\npkgload\n1.3.4\n\n\npraise\n1.0.0\n\n\nprettyunits\n1.2.0\n\n\nprocessx\n3.8.4\n\n\nprogress\n1.2.3\n\n\npromises\n1.3.0\n\n\nps\n1.7.6\n\n\npurrr\n1.0.2\n\n\nquantreg\n5.98\n\n\nR6\n2.5.1\n\n\nrappdirs\n0.3.3\n\n\nrbibutils\n2.2.16\n\n\nRColorBrewer\n1.1-3\n\n\nRcpp\n1.0.12\n\n\nRcppEigen\n0.3.4.0.0\n\n\nRdpack\n2.6\n\n\nreadr\n2.1.5\n\n\nreadxl\n1.4.3\n\n\nrematch\n2.0.0\n\n\nrematch2\n2.1.2\n\n\nrlang\n1.1.4\n\n\nrmarkdown\n2.27\n\n\nrprojroot\n2.0.4\n\n\nrstudioapi\n0.16.0\n\n\nrtables\n0.6.7\n\n\nsass\n0.4.9\n\n\nscales\n1.3.0\n\n\nsessioninfo\n1.2.2\n\n\nshiny\n1.8.1.1\n\n\nsourcetools\n0.1.7-1\n\n\nSparseM\n1.83\n\n\nstringi\n1.8.4\n\n\nstringr\n1.5.1\n\n\ntern\n0.9.4\n\n\ntestthat\n3.2.1.1\n\n\ntibble\n3.2.1\n\n\ntidyr\n1.3.1\n\n\ntidyselect\n1.2.1\n\n\ntimechange\n0.3.0\n\n\ntinytex\n0.51\n\n\ntzdb\n0.4.0\n\n\nutf8\n1.2.4\n\n\nvctrs\n0.6.5\n\n\nviridisLite\n0.4.2\n\n\nvroom\n1.6.5\n\n\nwaiter\n0.2.5\n\n\nwaldo\n0.5.2\n\n\nwithr\n3.0.0\n\n\nxfun\n0.44\n\n\nxml2\n1.3.6\n\n\nxportr\n0.4.0\n\n\nxtable\n1.8-4\n\n\nyaml\n2.3.8\n\n\npak\n0.7.2\n\n\nbase\n4.4.0\n\n\nboot\n1.3-30\n\n\nclass\n7.3-22\n\n\ncluster\n2.1.6\n\n\ncodetools\n0.2-20\n\n\ncompiler\n4.4.0\n\n\ndatasets\n4.4.0\n\n\nforeign\n0.8-86\n\n\ngraphics\n4.4.0\n\n\ngrDevices\n4.4.0\n\n\ngrid\n4.4.0\n\n\nKernSmooth\n2.23-22\n\n\nlattice\n0.22-6\n\n\nMASS\n7.3-60.2\n\n\nMatrix\n1.7-0\n\n\nmethods\n4.4.0\n\n\nmgcv\n1.9-1\n\n\nnlme\n3.1-164\n\n\nnnet\n7.3-19\n\n\nparallel\n4.4.0\n\n\nrpart\n4.1.23\n\n\nspatial\n7.3-17\n\n\nsplines\n4.4.0\n\n\nstats\n4.4.0\n\n\nstats4\n4.4.0\n\n\nsurvival\n3.5-8\n\n\ntcltk\n4.4.0\n\n\ntools\n4.4.0\n\n\nutils\n4.4.0",
    "crumbs": [
      "Session Info"
    ]
  },
  {
    "objectID": "tlg/adverse_events.html",
    "href": "tlg/adverse_events.html",
    "title": "Adverse Events",
    "section": "",
    "text": "This guide will show you how pharmaverse packages, along with some from tidyverse, can be used to create an Adverse Events table, using the {pharmaverseadam} ADSL and ADAE data as an input.\nThe packages used with a brief description of their purpose are as follows:\n\n{rtables}: designed to create and display complex tables with R.\n{tern}: contains analysis functions to create tables and graphs used for clinical trial reporting.",
    "crumbs": [
      "TLG",
      "Adverse Events"
    ]
  },
  {
    "objectID": "tlg/adverse_events.html#introduction",
    "href": "tlg/adverse_events.html#introduction",
    "title": "Adverse Events",
    "section": "",
    "text": "This guide will show you how pharmaverse packages, along with some from tidyverse, can be used to create an Adverse Events table, using the {pharmaverseadam} ADSL and ADAE data as an input.\nThe packages used with a brief description of their purpose are as follows:\n\n{rtables}: designed to create and display complex tables with R.\n{tern}: contains analysis functions to create tables and graphs used for clinical trial reporting.",
    "crumbs": [
      "TLG",
      "Adverse Events"
    ]
  },
  {
    "objectID": "tlg/adverse_events.html#load-data-and-required-pharmaverse-package",
    "href": "tlg/adverse_events.html#load-data-and-required-pharmaverse-package",
    "title": "Adverse Events",
    "section": "Load Data and Required pharmaverse Package",
    "text": "Load Data and Required pharmaverse Package\nAfter installation of packages, the first step is to load our pharmaverse packages and input data. Here, we are going to encode missing entries in a data frame adsl and adae.\nNote that {tern} depends on {rtables} so the latter is automatically attached.\n\nlibrary(pharmaverseadam)\nlibrary(tern)\nlibrary(dplyr)\n\nadsl &lt;- adsl %&gt;%\n  df_explicit_na()\n\nadae &lt;- adae %&gt;%\n  df_explicit_na()\n/home/runner/work/examples/examples/tlg/adverse_events.R",
    "crumbs": [
      "TLG",
      "Adverse Events"
    ]
  },
  {
    "objectID": "tlg/adverse_events.html#start-preprocessing",
    "href": "tlg/adverse_events.html#start-preprocessing",
    "title": "Adverse Events",
    "section": "Start preprocessing",
    "text": "Start preprocessing\nNow we will add some pre-processing to add labels ready for display in the table and how the output will be split.\n\nadae &lt;- adae %&gt;%\n  var_relabel(\n    AEBODSYS = \"MedDRA System Organ Class\",\n    AEDECOD = \"MedDRA Preferred Term\"\n  ) %&gt;%\n  filter(SAFFL == \"Y\")\n\n# Define the split function\nsplit_fun &lt;- drop_split_levels\n/home/runner/work/examples/examples/tlg/adverse_events.R",
    "crumbs": [
      "TLG",
      "Adverse Events"
    ]
  },
  {
    "objectID": "tlg/adverse_events.html#adverse-events-table",
    "href": "tlg/adverse_events.html#adverse-events-table",
    "title": "Adverse Events",
    "section": "Adverse Events table",
    "text": "Adverse Events table\nNow we create the Adverse Events table.\n\nlyt &lt;- basic_table(show_colcounts = TRUE) %&gt;%\n  split_cols_by(var = \"ACTARM\") %&gt;%\n  add_overall_col(label = \"All Patients\") %&gt;%\n  analyze_num_patients(\n    vars = \"USUBJID\",\n    .stats = c(\"unique\", \"nonunique\"),\n    .labels = c(\n      unique = \"Total number of patients with at least one adverse event\",\n      nonunique = \"Overall total number of events\"\n    )\n  ) %&gt;%\n  split_rows_by(\n    \"AEBODSYS\",\n    child_labels = \"visible\",\n    nested = FALSE,\n    split_fun = split_fun,\n    label_pos = \"topleft\",\n    split_label = obj_label(adae$AEBODSYS)\n  ) %&gt;%\n  summarize_num_patients(\n    var = \"USUBJID\",\n    .stats = c(\"unique\", \"nonunique\"),\n    .labels = c(\n      unique = \"Total number of patients with at least one adverse event\",\n      nonunique = \"Total number of events\"\n    )\n  ) %&gt;%\n  count_occurrences(\n    vars = \"AEDECOD\",\n    .indent_mods = -1L\n  ) %&gt;%\n  append_varlabels(adae, \"AEDECOD\", indent = 1L)\n\nresult &lt;- build_table(lyt, df = adae, alt_counts_df = adsl)\n\nresult\n\nMedDRA System Organ Class                                              Placebo     Xanomeline High Dose   Xanomeline Low Dose   All Patients\n  MedDRA Preferred Term                                                 (N=86)            (N=72)                (N=96)            (N=306)   \n————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————\nTotal number of patients with at least one adverse event              69 (80.2%)        70 (97.2%)            86 (89.6%)        225 (73.5%) \nOverall total number of events                                           301               436                    454               1191    \nCARDIAC DISORDERS                                                                                                                           \n  Total number of patients with at least one adverse event            13 (15.1%)        15 (20.8%)            16 (16.7%)         44 (14.4%) \n  Total number of events                                                  27                30                    34                 91     \n  ATRIAL FIBRILLATION                                                  1 (1.2%)          2 (2.8%)              2 (2.1%)           5 (1.6%)  \n  ATRIAL FLUTTER                                                          0              1 (1.4%)              1 (1.0%)           2 (0.7%)  \n  ATRIAL HYPERTROPHY                                                   1 (1.2%)             0                      0              1 (0.3%)  \n  ATRIOVENTRICULAR BLOCK FIRST DEGREE                                  1 (1.2%)             0                  1 (1.0%)           2 (0.7%)  \n  ATRIOVENTRICULAR BLOCK SECOND DEGREE                                 2 (2.3%)          1 (1.4%)              2 (2.1%)           5 (1.6%)  \n  BRADYCARDIA                                                          1 (1.2%)             0                      0              1 (0.3%)  \n  BUNDLE BRANCH BLOCK LEFT                                             1 (1.2%)             0                      0              1 (0.3%)  \n  BUNDLE BRANCH BLOCK RIGHT                                            1 (1.2%)             0                  1 (1.0%)           2 (0.7%)  \n  CARDIAC DISORDER                                                        0              1 (1.4%)                  0              1 (0.3%)  \n  CARDIAC FAILURE CONGESTIVE                                           1 (1.2%)             0                      0              1 (0.3%)  \n  MYOCARDIAL INFARCTION                                                4 (4.7%)          4 (5.6%)              2 (2.1%)          10 (3.3%)  \n  PALPITATIONS                                                            0                 0                  2 (2.1%)           2 (0.7%)  \n  SINUS ARRHYTHMIA                                                     1 (1.2%)             0                      0              1 (0.3%)  \n  SINUS BRADYCARDIA                                                    2 (2.3%)         8 (11.1%)              7 (7.3%)          17 (5.6%)  \n  SUPRAVENTRICULAR EXTRASYSTOLES                                       1 (1.2%)          1 (1.4%)              1 (1.0%)           3 (1.0%)  \n  SUPRAVENTRICULAR TACHYCARDIA                                            0                 0                  1 (1.0%)           1 (0.3%)  \n  TACHYCARDIA                                                          1 (1.2%)             0                      0              1 (0.3%)  \n  VENTRICULAR EXTRASYSTOLES                                               0              1 (1.4%)              2 (2.1%)           3 (1.0%)  \n  VENTRICULAR HYPERTROPHY                                              1 (1.2%)             0                      0              1 (0.3%)  \n  WOLFF-PARKINSON-WHITE SYNDROME                                          0                 0                  1 (1.0%)           1 (0.3%)  \nCONGENITAL, FAMILIAL AND GENETIC DISORDERS                                                                                                  \n  Total number of patients with at least one adverse event                0              2 (2.8%)              1 (1.0%)           3 (1.0%)  \n  Total number of events                                                  0                 2                      1                 3      \n  VENTRICULAR SEPTAL DEFECT                                               0              2 (2.8%)              1 (1.0%)           3 (1.0%)  \nEAR AND LABYRINTH DISORDERS                                                                                                                 \n  Total number of patients with at least one adverse event             1 (1.2%)          1 (1.4%)              2 (2.1%)           4 (1.3%)  \n  Total number of events                                                  2                 1                      3                 6      \n  CERUMEN IMPACTION                                                       0                 0                  1 (1.0%)           1 (0.3%)  \n  EAR PAIN                                                             1 (1.2%)             0                      0              1 (0.3%)  \n  TINNITUS                                                                0                 0                  1 (1.0%)           1 (0.3%)  \n  VERTIGO                                                                 0              1 (1.4%)              1 (1.0%)           2 (0.7%)  \nEYE DISORDERS                                                                                                                               \n  Total number of patients with at least one adverse event             4 (4.7%)          1 (1.4%)              2 (2.1%)           7 (2.3%)  \n  Total number of events                                                  8                 2                      2                 12     \n  CONJUNCTIVAL HAEMORRHAGE                                                0                 0                  1 (1.0%)           1 (0.3%)  \n  CONJUNCTIVITIS                                                       2 (2.3%)             0                      0              2 (0.7%)  \n  EYE ALLERGY                                                          1 (1.2%)             0                      0              1 (0.3%)  \n  EYE PRURITUS                                                         1 (1.2%)             0                      0              1 (0.3%)  \n  EYE SWELLING                                                         1 (1.2%)             0                      0              1 (0.3%)  \n  GLAUCOMA                                                             1 (1.2%)             0                      0              1 (0.3%)  \n  VISION BLURRED                                                          0              1 (1.4%)              1 (1.0%)           2 (0.7%)  \nGASTROINTESTINAL DISORDERS                                                                                                                  \n  Total number of patients with at least one adverse event            17 (19.8%)        20 (27.8%)            16 (16.7%)         53 (17.3%) \n  Total number of events                                                  26                35                    26                 87     \n  ABDOMINAL DISCOMFORT                                                    0              1 (1.4%)                  0              1 (0.3%)  \n  ABDOMINAL PAIN                                                       1 (1.2%)          1 (1.4%)              3 (3.1%)           5 (1.6%)  \n  CONSTIPATION                                                         1 (1.2%)             0                      0              1 (0.3%)  \n  DIARRHOEA                                                           9 (10.5%)          3 (4.2%)              6 (6.2%)          18 (5.9%)  \n  DYSPEPSIA                                                            1 (1.2%)          1 (1.4%)              1 (1.0%)           3 (1.0%)  \n  DYSPHAGIA                                                               0                 0                  1 (1.0%)           1 (0.3%)  \n  FLATULENCE                                                           1 (1.2%)             0                      0              1 (0.3%)  \n  GASTROINTESTINAL HAEMORRHAGE                                            0              1 (1.4%)                  0              1 (0.3%)  \n  GASTROOESOPHAGEAL REFLUX DISEASE                                     1 (1.2%)             0                      0              1 (0.3%)  \n  GLOSSITIS                                                            1 (1.2%)             0                      0              1 (0.3%)  \n  HIATUS HERNIA                                                        1 (1.2%)             0                      0              1 (0.3%)  \n  NAUSEA                                                               3 (3.5%)          6 (8.3%)              3 (3.1%)          12 (3.9%)  \n  RECTAL HAEMORRHAGE                                                      0                 0                  1 (1.0%)           1 (0.3%)  \n  SALIVARY HYPERSECRETION                                                 0              4 (5.6%)                  0              4 (1.3%)  \n  STOMACH DISCOMFORT                                                      0              1 (1.4%)                  0              1 (0.3%)  \n  VOMITING                                                             3 (3.5%)          6 (8.3%)              4 (4.2%)          13 (4.2%)  \nGENERAL DISORDERS AND ADMINISTRATION SITE CONDITIONS                                                                                        \n  Total number of patients with at least one adverse event            21 (24.4%)        36 (50.0%)            51 (53.1%)        108 (35.3%) \n  Total number of events                                                  48               118                    126               292     \n  APPLICATION SITE BLEEDING                                               0                 0                  1 (1.0%)           1 (0.3%)  \n  APPLICATION SITE DERMATITIS                                          5 (5.8%)          7 (9.7%)              9 (9.4%)          21 (6.9%)  \n  APPLICATION SITE DESQUAMATION                                           0                 0                  1 (1.0%)           1 (0.3%)  \n  APPLICATION SITE DISCHARGE                                              0              1 (1.4%)                  0              1 (0.3%)  \n  APPLICATION SITE DISCOLOURATION                                         0                 0                  1 (1.0%)           1 (0.3%)  \n  APPLICATION SITE ERYTHEMA                                            3 (3.5%)         14 (19.4%)            13 (13.5%)         30 (9.8%)  \n  APPLICATION SITE INDURATION                                          1 (1.2%)             0                      0              1 (0.3%)  \n  APPLICATION SITE IRRITATION                                          3 (3.5%)         9 (12.5%)              9 (9.4%)          21 (6.9%)  \n  APPLICATION SITE PAIN                                                   0              2 (2.8%)                  0              2 (0.7%)  \n  APPLICATION SITE PERSPIRATION                                           0              2 (2.8%)                  0              2 (0.7%)  \n  APPLICATION SITE PRURITUS                                            6 (7.0%)         21 (29.2%)            23 (24.0%)         50 (16.3%) \n  APPLICATION SITE REACTION                                            1 (1.2%)          1 (1.4%)                  0              2 (0.7%)  \n  APPLICATION SITE SWELLING                                               0              2 (2.8%)              1 (1.0%)           3 (1.0%)  \n  APPLICATION SITE URTICARIA                                              0              1 (1.4%)              2 (2.1%)           3 (1.0%)  \n  APPLICATION SITE VESICLES                                            1 (1.2%)          5 (6.9%)              5 (5.2%)          11 (3.6%)  \n  APPLICATION SITE WARMTH                                                 0                 0                  1 (1.0%)           1 (0.3%)  \n  ASTHENIA                                                             1 (1.2%)             0                  1 (1.0%)           2 (0.7%)  \n  CHEST DISCOMFORT                                                        0              1 (1.4%)              1 (1.0%)           2 (0.7%)  \n  CHEST PAIN                                                              0              2 (2.8%)                  0              2 (0.7%)  \n  CHILLS                                                               1 (1.2%)          1 (1.4%)              1 (1.0%)           3 (1.0%)  \n  CYST                                                                    0                 0                  1 (1.0%)           1 (0.3%)  \n  FATIGUE                                                              1 (1.2%)          5 (6.9%)              5 (5.2%)          11 (3.6%)  \n  FEELING ABNORMAL                                                        0              1 (1.4%)                  0              1 (0.3%)  \n  FEELING COLD                                                            0              1 (1.4%)                  0              1 (0.3%)  \n  INFLAMMATION                                                            0                 0                  1 (1.0%)           1 (0.3%)  \n  MALAISE                                                                 0              2 (2.8%)              1 (1.0%)           3 (1.0%)  \n  OEDEMA                                                                  0                 0                  2 (2.1%)           2 (0.7%)  \n  OEDEMA PERIPHERAL                                                    2 (2.3%)          2 (2.8%)              1 (1.0%)           5 (1.6%)  \n  PAIN                                                                    0              1 (1.4%)              1 (1.0%)           2 (0.7%)  \n  PYREXIA                                                              2 (2.3%)             0                  1 (1.0%)           3 (1.0%)  \n  SECRETION DISCHARGE                                                     0                 0                  1 (1.0%)           1 (0.3%)  \n  SUDDEN DEATH                                                            0                 0                  1 (1.0%)           1 (0.3%)  \n  SWELLING                                                                0                 0                  1 (1.0%)           1 (0.3%)  \n  ULCER                                                                   0                 0                  1 (1.0%)           1 (0.3%)  \nHEPATOBILIARY DISORDERS                                                                                                                     \n  Total number of patients with at least one adverse event             1 (1.2%)             0                      0              1 (0.3%)  \n  Total number of events                                                  1                 0                      0                 1      \n  HYPERBILIRUBINAEMIA                                                  1 (1.2%)             0                      0              1 (0.3%)  \nIMMUNE SYSTEM DISORDERS                                                                                                                     \n  Total number of patients with at least one adverse event                0              1 (1.4%)              1 (1.0%)           2 (0.7%)  \n  Total number of events                                                  0                 1                      2                 3      \n  HYPERSENSITIVITY                                                        0                 0                  1 (1.0%)           1 (0.3%)  \n  SEASONAL ALLERGY                                                        0              1 (1.4%)                  0              1 (0.3%)  \nINFECTIONS AND INFESTATIONS                                                                                                                 \n  Total number of patients with at least one adverse event            16 (18.6%)        13 (18.1%)            10 (10.4%)         39 (12.7%) \n  Total number of events                                                  35                20                    18                 73     \n  BRONCHITIS                                                           1 (1.2%)             0                      0              1 (0.3%)  \n  CELLULITIS                                                              0                 0                  1 (1.0%)           1 (0.3%)  \n  CERVICITIS                                                           1 (1.2%)             0                      0              1 (0.3%)  \n  CYSTITIS                                                             1 (1.2%)          1 (1.4%)                  0              2 (0.7%)  \n  EAR INFECTION                                                        2 (2.3%)             0                      0              2 (0.7%)  \n  GASTROENTERITIS VIRAL                                                1 (1.2%)             0                      0              1 (0.3%)  \n  HORDEOLUM                                                               0              1 (1.4%)                  0              1 (0.3%)  \n  INFLUENZA                                                            1 (1.2%)          1 (1.4%)              1 (1.0%)           3 (1.0%)  \n  LOCALISED INFECTION                                                  1 (1.2%)             0                  1 (1.0%)           2 (0.7%)  \n  LOWER RESPIRATORY TRACT INFECTION                                       0              1 (1.4%)                  0              1 (0.3%)  \n  NASOPHARYNGITIS                                                      2 (2.3%)          6 (8.3%)              4 (4.2%)          12 (3.9%)  \n  ONYCHOMYCOSIS                                                           0                 0                  1 (1.0%)           1 (0.3%)  \n  PNEUMONIA                                                               0                 0                  1 (1.0%)           1 (0.3%)  \n  RHINITIS                                                                0              1 (1.4%)                  0              1 (0.3%)  \n  UPPER RESPIRATORY TRACT INFECTION                                    6 (7.0%)          3 (4.2%)              1 (1.0%)          10 (3.3%)  \n  URINARY TRACT INFECTION                                              2 (2.3%)          1 (1.4%)                  0              3 (1.0%)  \n  VAGINAL MYCOSIS                                                      1 (1.2%)             0                      0              1 (0.3%)  \n  VIRAL INFECTION                                                         0                 0                  1 (1.0%)           1 (0.3%)  \nINJURY, POISONING AND PROCEDURAL COMPLICATIONS                                                                                              \n  Total number of patients with at least one adverse event             4 (4.7%)          5 (6.9%)              5 (5.2%)          14 (4.6%)  \n  Total number of events                                                  9                 8                     12                 29     \n  CONTUSION                                                            1 (1.2%)          2 (2.8%)              1 (1.0%)           4 (1.3%)  \n  EXCORIATION                                                          2 (2.3%)          1 (1.4%)              1 (1.0%)           4 (1.3%)  \n  FACIAL BONES FRACTURE                                                   0              1 (1.4%)                  0              1 (0.3%)  \n  FALL                                                                 1 (1.2%)          1 (1.4%)              2 (2.1%)           4 (1.3%)  \n  HIP FRACTURE                                                         1 (1.2%)          2 (2.8%)                  0              3 (1.0%)  \n  JOINT DISLOCATION                                                       0                 0                  1 (1.0%)           1 (0.3%)  \n  SKIN LACERATION                                                      1 (1.2%)             0                  2 (2.1%)           3 (1.0%)  \n  WOUND                                                                   0                 0                  1 (1.0%)           1 (0.3%)  \nINVESTIGATIONS                                                                                                                              \n  Total number of patients with at least one adverse event            10 (11.6%)         5 (6.9%)              8 (8.3%)          23 (7.5%)  \n  Total number of events                                                  19                6                     15                 40     \n  BIOPSY                                                                  0              1 (1.4%)                  0              1 (0.3%)  \n  BIOPSY PROSTATE                                                         0              1 (1.4%)                  0              1 (0.3%)  \n  BLOOD ALKALINE PHOSPHATASE INCREASED                                 1 (1.2%)             0                      0              1 (0.3%)  \n  BLOOD CHOLESTEROL INCREASED                                             0              1 (1.4%)                  0              1 (0.3%)  \n  BLOOD CREATINE PHOSPHOKINASE INCREASED                               1 (1.2%)             0                      0              1 (0.3%)  \n  BLOOD GLUCOSE INCREASED                                                 0              1 (1.4%)              1 (1.0%)           2 (0.7%)  \n  BLOOD URINE PRESENT                                                  1 (1.2%)             0                      0              1 (0.3%)  \n  BODY TEMPERATURE INCREASED                                              0                 0                  1 (1.0%)           1 (0.3%)  \n  CYSTOSCOPY                                                           1 (1.2%)             0                      0              1 (0.3%)  \n  ELECTROCARDIOGRAM ST SEGMENT DEPRESSION                              4 (4.7%)             0                  1 (1.0%)           5 (1.6%)  \n  ELECTROCARDIOGRAM T WAVE AMPLITUDE DECREASED                         1 (1.2%)             0                  1 (1.0%)           2 (0.7%)  \n  ELECTROCARDIOGRAM T WAVE INVERSION                                   2 (2.3%)          1 (1.4%)              1 (1.0%)           4 (1.3%)  \n  HEART RATE INCREASED                                                 1 (1.2%)             0                      0              1 (0.3%)  \n  HEART RATE IRREGULAR                                                 1 (1.2%)             0                      0              1 (0.3%)  \n  NASAL MUCOSA BIOPSY                                                     0                 0                  1 (1.0%)           1 (0.3%)  \n  NEUTROPHIL COUNT INCREASED                                              0                 0                  1 (1.0%)           1 (0.3%)  \n  URINE ANALYSIS ABNORMAL                                                 0                 0                  1 (1.0%)           1 (0.3%)  \n  WEIGHT DECREASED                                                        0                 0                  1 (1.0%)           1 (0.3%)  \n  WHITE BLOOD CELL COUNT INCREASED                                        0                 0                  1 (1.0%)           1 (0.3%)  \nMETABOLISM AND NUTRITION DISORDERS                                                                                                          \n  Total number of patients with at least one adverse event             6 (7.0%)          3 (4.2%)              1 (1.0%)          10 (3.3%)  \n  Total number of events                                                  8                 5                      1                 14     \n  DECREASED APPETITE                                                   1 (1.2%)          1 (1.4%)                  0              2 (0.7%)  \n  DEHYDRATION                                                          1 (1.2%)             0                      0              1 (0.3%)  \n  DIABETES MELLITUS                                                    1 (1.2%)             0                      0              1 (0.3%)  \n  FOOD CRAVING                                                         1 (1.2%)             0                  1 (1.0%)           2 (0.7%)  \n  HYPERCHOLESTEROLAEMIA                                                   0              1 (1.4%)                  0              1 (0.3%)  \n  HYPONATRAEMIA                                                        1 (1.2%)             0                      0              1 (0.3%)  \n  INCREASED APPETITE                                                   1 (1.2%)          1 (1.4%)                  0              2 (0.7%)  \nMUSCULOSKELETAL AND CONNECTIVE TISSUE DISORDERS                                                                                             \n  Total number of patients with at least one adverse event             5 (5.8%)         8 (11.1%)              7 (7.3%)          20 (6.5%)  \n  Total number of events                                                  8                 11                    10                 29     \n  ARTHRALGIA                                                           1 (1.2%)          1 (1.4%)              2 (2.1%)           4 (1.3%)  \n  ARTHRITIS                                                            1 (1.2%)          1 (1.4%)                  0              2 (0.7%)  \n  BACK PAIN                                                            1 (1.2%)          3 (4.2%)              1 (1.0%)           5 (1.6%)  \n  FLANK PAIN                                                              0              2 (2.8%)                  0              2 (0.7%)  \n  MUSCLE SPASMS                                                           0              1 (1.4%)              1 (1.0%)           2 (0.7%)  \n  MUSCULAR WEAKNESS                                                       0                 0                  1 (1.0%)           1 (0.3%)  \n  MYALGIA                                                                 0              1 (1.4%)                  0              1 (0.3%)  \n  PAIN IN EXTREMITY                                                    1 (1.2%)             0                      0              1 (0.3%)  \n  SHOULDER PAIN                                                        1 (1.2%)             0                  2 (2.1%)           3 (1.0%)  \nNEOPLASMS BENIGN, MALIGNANT AND UNSPECIFIED (INCL CYSTS AND POLYPS)                                                                         \n  Total number of patients with at least one adverse event                0              1 (1.4%)              2 (2.1%)           3 (1.0%)  \n  Total number of events                                                  0                 1                      3                 4      \n  COLON CANCER                                                            0                 0                  1 (1.0%)           1 (0.3%)  \n  MALIGNANT FIBROUS HISTIOCYTOMA                                          0                 0                  1 (1.0%)           1 (0.3%)  \n  PROSTATE CANCER                                                         0              1 (1.4%)                  0              1 (0.3%)  \nNERVOUS SYSTEM DISORDERS                                                                                                                    \n  Total number of patients with at least one adverse event            12 (14.0%)        25 (34.7%)            22 (22.9%)         59 (19.3%) \n  Total number of events                                                  16                43                    42                101     \n  AMNESIA                                                                 0              1 (1.4%)                  0              1 (0.3%)  \n  BALANCE DISORDER                                                        0                 0                  1 (1.0%)           1 (0.3%)  \n  BURNING SENSATION                                                       0              2 (2.8%)                  0              2 (0.7%)  \n  COGNITIVE DISORDER                                                      0              1 (1.4%)                  0              1 (0.3%)  \n  COMPLEX PARTIAL SEIZURES                                                0                 0                  1 (1.0%)           1 (0.3%)  \n  COORDINATION ABNORMAL                                                   0                 0                  1 (1.0%)           1 (0.3%)  \n  DIZZINESS                                                            2 (2.3%)         11 (15.3%)             9 (9.4%)          22 (7.2%)  \n  HEADACHE                                                             7 (8.1%)          6 (8.3%)              3 (3.1%)          16 (5.2%)  \n  HEMIANOPIA HOMONYMOUS                                                   0                 0                  1 (1.0%)           1 (0.3%)  \n  HYPERSOMNIA                                                             0              1 (1.4%)                  0              1 (0.3%)  \n  LETHARGY                                                                0              1 (1.4%)              1 (1.0%)           2 (0.7%)  \n  PARAESTHESIA                                                            0              1 (1.4%)                  0              1 (0.3%)  \n  PARAESTHESIA ORAL                                                       0                 0                  1 (1.0%)           1 (0.3%)  \n  PARKINSON'S DISEASE                                                  1 (1.2%)             0                      0              1 (0.3%)  \n  PAROSMIA                                                                0              1 (1.4%)                  0              1 (0.3%)  \n  PARTIAL SEIZURES WITH SECONDARY GENERALISATION                          0              1 (1.4%)                  0              1 (0.3%)  \n  PSYCHOMOTOR HYPERACTIVITY                                            1 (1.2%)             0                      0              1 (0.3%)  \n  SOMNOLENCE                                                           2 (2.3%)          1 (1.4%)              3 (3.1%)           6 (2.0%)  \n  STUPOR                                                                  0                 0                  1 (1.0%)           1 (0.3%)  \n  SYNCOPE                                                                 0              2 (2.8%)              5 (5.2%)           7 (2.3%)  \n  SYNCOPE VASOVAGAL                                                       0              1 (1.4%)                  0              1 (0.3%)  \n  TRANSIENT ISCHAEMIC ATTACK                                              0              1 (1.4%)              2 (2.1%)           3 (1.0%)  \nPSYCHIATRIC DISORDERS                                                                                                                       \n  Total number of patients with at least one adverse event            10 (11.6%)        8 (11.1%)             11 (11.5%)         29 (9.5%)  \n  Total number of events                                                  14                11                    15                 40     \n  AGITATION                                                            2 (2.3%)             0                  3 (3.1%)           5 (1.6%)  \n  ANXIETY                                                              1 (1.2%)             0                  3 (3.1%)           4 (1.3%)  \n  COMPLETED SUICIDE                                                    1 (1.2%)             0                      0              1 (0.3%)  \n  CONFUSIONAL STATE                                                    2 (2.3%)          1 (1.4%)              3 (3.1%)           6 (2.0%)  \n  DELIRIUM                                                                0              1 (1.4%)                  0              1 (0.3%)  \n  DELUSION                                                             1 (1.2%)          1 (1.4%)                  0              2 (0.7%)  \n  DEPRESSED MOOD                                                          0              1 (1.4%)              1 (1.0%)           2 (0.7%)  \n  DISORIENTATION                                                       1 (1.2%)             0                      0              1 (0.3%)  \n  HALLUCINATION                                                           0              1 (1.4%)                  0              1 (0.3%)  \n  HALLUCINATION, VISUAL                                                   0              1 (1.4%)                  0              1 (0.3%)  \n  INSOMNIA                                                             2 (2.3%)          2 (2.8%)                  0              4 (1.3%)  \n  IRRITABILITY                                                         1 (1.2%)             0                  1 (1.0%)           2 (0.7%)  \n  LIBIDO DECREASED                                                        0              1 (1.4%)                  0              1 (0.3%)  \n  LISTLESS                                                                0              1 (1.4%)                  0              1 (0.3%)  \n  NIGHTMARE                                                               0              1 (1.4%)                  0              1 (0.3%)  \n  RESTLESSNESS                                                            0                 0                  1 (1.0%)           1 (0.3%)  \nRENAL AND URINARY DISORDERS                                                                                                                 \n  Total number of patients with at least one adverse event             4 (4.7%)          3 (4.2%)              4 (4.2%)          11 (3.6%)  \n  Total number of events                                                  5                 4                      4                 13     \n  CALCULUS URETHRAL                                                       0              1 (1.4%)                  0              1 (0.3%)  \n  DYSURIA                                                              1 (1.2%)             0                  1 (1.0%)           2 (0.7%)  \n  ENURESIS                                                                0                 0                  1 (1.0%)           1 (0.3%)  \n  INCONTINENCE                                                            0                 0                  1 (1.0%)           1 (0.3%)  \n  MICTURITION URGENCY                                                  1 (1.2%)          1 (1.4%)              1 (1.0%)           3 (1.0%)  \n  NEPHROLITHIASIS                                                      1 (1.2%)          1 (1.4%)                  0              2 (0.7%)  \n  POLLAKIURIA                                                          1 (1.2%)             0                      0              1 (0.3%)  \nREPRODUCTIVE SYSTEM AND BREAST DISORDERS                                                                                                    \n  Total number of patients with at least one adverse event             2 (2.3%)          1 (1.4%)                  0              3 (1.0%)  \n  Total number of events                                                  4                 1                      0                 5      \n  BENIGN PROSTATIC HYPERPLASIA                                         1 (1.2%)          1 (1.4%)                  0              2 (0.7%)  \n  PELVIC PAIN                                                          1 (1.2%)             0                      0              1 (0.3%)  \nRESPIRATORY, THORACIC AND MEDIASTINAL DISORDERS                                                                                             \n  Total number of patients with at least one adverse event            10 (11.6%)        10 (13.9%)            10 (10.4%)         30 (9.8%)  \n  Total number of events                                                  15                22                    16                 53     \n  ALLERGIC GRANULOMATOUS ANGIITIS                                         0              1 (1.4%)                  0              1 (0.3%)  \n  COUGH                                                                3 (3.5%)          5 (6.9%)              6 (6.2%)          14 (4.6%)  \n  DYSPHONIA                                                               0                 0                  1 (1.0%)           1 (0.3%)  \n  DYSPNOEA                                                             1 (1.2%)          1 (1.4%)              1 (1.0%)           3 (1.0%)  \n  EMPHYSEMA                                                            1 (1.2%)             0                      0              1 (0.3%)  \n  EPISTAXIS                                                               0              2 (2.8%)              1 (1.0%)           3 (1.0%)  \n  HAEMOPTYSIS                                                          1 (1.2%)             0                      0              1 (0.3%)  \n  NASAL CONGESTION                                                     3 (3.5%)          3 (4.2%)              1 (1.0%)           7 (2.3%)  \n  PHARYNGEAL ERYTHEMA                                                     0              1 (1.4%)                  0              1 (0.3%)  \n  PHARYNGOLARYNGEAL PAIN                                                  0              1 (1.4%)              1 (1.0%)           2 (0.7%)  \n  POSTNASAL DRIP                                                       1 (1.2%)             0                      0              1 (0.3%)  \n  PRODUCTIVE COUGH                                                        0              1 (1.4%)                  0              1 (0.3%)  \n  RALES                                                                1 (1.2%)             0                      0              1 (0.3%)  \n  RESPIRATORY TRACT CONGESTION                                            0              1 (1.4%)                  0              1 (0.3%)  \n  RHINORRHOEA                                                             0              1 (1.4%)              1 (1.0%)           2 (0.7%)  \nSKIN AND SUBCUTANEOUS TISSUE DISORDERS                                                                                                      \n  Total number of patients with at least one adverse event            21 (24.4%)        42 (58.3%)            42 (43.8%)        105 (34.3%) \n  Total number of events                                                  47               111                    118               276     \n  ACTINIC KERATOSIS                                                       0              1 (1.4%)                  0              1 (0.3%)  \n  ALOPECIA                                                             1 (1.2%)             0                      0              1 (0.3%)  \n  BLISTER                                                                 0              1 (1.4%)              5 (5.2%)           6 (2.0%)  \n  COLD SWEAT                                                           1 (1.2%)             0                      0              1 (0.3%)  \n  DERMATITIS ATOPIC                                                    1 (1.2%)             0                      0              1 (0.3%)  \n  DERMATITIS CONTACT                                                      0                 0                  1 (1.0%)           1 (0.3%)  \n  DRUG ERUPTION                                                        1 (1.2%)             0                      0              1 (0.3%)  \n  ERYTHEMA                                                            9 (10.5%)         14 (19.4%)            15 (15.6%)         38 (12.4%) \n  HYPERHIDROSIS                                                        2 (2.3%)         8 (11.1%)              4 (4.2%)          14 (4.6%)  \n  PRURITUS                                                             8 (9.3%)         26 (36.1%)            23 (24.0%)         57 (18.6%) \n  PRURITUS GENERALISED                                                    0              1 (1.4%)              1 (1.0%)           2 (0.7%)  \n  RASH                                                                 5 (5.8%)         11 (15.3%)            13 (13.5%)         29 (9.5%)  \n  RASH ERYTHEMATOUS                                                       0                 0                  2 (2.1%)           2 (0.7%)  \n  RASH MACULO-PAPULAR                                                     0              1 (1.4%)                  0              1 (0.3%)  \n  RASH PAPULAR                                                            0              1 (1.4%)                  0              1 (0.3%)  \n  RASH PRURITIC                                                           0              2 (2.8%)              1 (1.0%)           3 (1.0%)  \n  SKIN EXFOLIATION                                                        0                 0                  1 (1.0%)           1 (0.3%)  \n  SKIN IRRITATION                                                      3 (3.5%)          5 (6.9%)              6 (6.2%)          14 (4.6%)  \n  SKIN ODOUR ABNORMAL                                                     0              1 (1.4%)                  0              1 (0.3%)  \n  SKIN ULCER                                                           1 (1.2%)             0                      0              1 (0.3%)  \n  URTICARIA                                                               0              1 (1.4%)              1 (1.0%)           2 (0.7%)  \nSOCIAL CIRCUMSTANCES                                                                                                                        \n  Total number of patients with at least one adverse event                0              1 (1.4%)                  0              1 (0.3%)  \n  Total number of events                                                  0                 1                      0                 1      \n  ALCOHOL USE                                                             0              1 (1.4%)                  0              1 (0.3%)  \nSURGICAL AND MEDICAL PROCEDURES                                                                                                             \n  Total number of patients with at least one adverse event             2 (2.3%)          2 (2.8%)              1 (1.0%)           5 (1.6%)  \n  Total number of events                                                  2                 2                      1                 5      \n  ACROCHORDON EXCISION                                                    0              1 (1.4%)                  0              1 (0.3%)  \n  CATARACT OPERATION                                                   1 (1.2%)             0                  1 (1.0%)           2 (0.7%)  \n  EYE LASER SURGERY                                                    1 (1.2%)             0                      0              1 (0.3%)  \n  SKIN LESION EXCISION                                                    0              1 (1.4%)                  0              1 (0.3%)  \nVASCULAR DISORDERS                                                                                                                          \n  Total number of patients with at least one adverse event             3 (3.5%)          1 (1.4%)              4 (4.2%)           8 (2.6%)  \n  Total number of events                                                  7                 1                      5                 13     \n  HOT FLUSH                                                               0                 0                  1 (1.0%)           1 (0.3%)  \n  HYPERTENSION                                                         1 (1.2%)             0                  2 (2.1%)           3 (1.0%)  \n  HYPOTENSION                                                          2 (2.3%)             0                  1 (1.0%)           3 (1.0%)  \n  ORTHOSTATIC HYPOTENSION                                              1 (1.2%)             0                      0              1 (0.3%)  \n  WOUND HAEMORRHAGE                                                       0              1 (1.4%)                  0              1 (0.3%)  \n\n/home/runner/work/examples/examples/tlg/adverse_events.R",
    "crumbs": [
      "TLG",
      "Adverse Events"
    ]
  },
  {
    "objectID": "tlg/demographic.html",
    "href": "tlg/demographic.html",
    "title": "Demographic Table",
    "section": "",
    "text": "This guide will show you how pharmaverse packages, along with some from tidyverse, can be used to create a Demographic table, using the {pharmaverseadam} ADSL data as an input.\nThe packages used with a brief description of their purpose are as follows:\n\n{rtables}: designed to create and display complex tables with R.\n{tern}: contains analysis functions to create tables and graphs used for clinical trial reporting.",
    "crumbs": [
      "TLG",
      "Demographic Table"
    ]
  },
  {
    "objectID": "tlg/demographic.html#introduction",
    "href": "tlg/demographic.html#introduction",
    "title": "Demographic Table",
    "section": "",
    "text": "This guide will show you how pharmaverse packages, along with some from tidyverse, can be used to create a Demographic table, using the {pharmaverseadam} ADSL data as an input.\nThe packages used with a brief description of their purpose are as follows:\n\n{rtables}: designed to create and display complex tables with R.\n{tern}: contains analysis functions to create tables and graphs used for clinical trial reporting.",
    "crumbs": [
      "TLG",
      "Demographic Table"
    ]
  },
  {
    "objectID": "tlg/demographic.html#load-data-and-required-pharmaverse-package",
    "href": "tlg/demographic.html#load-data-and-required-pharmaverse-package",
    "title": "Demographic Table",
    "section": "Load Data and Required pharmaverse Package",
    "text": "Load Data and Required pharmaverse Package\nAfter installation of packages, the first step is to load our pharmaverse packages and input data. Here, we are going to encode missing entries in a data frame adsl.\nNote that {tern} depends on {rtables} so the latter is automatically attached.\n\nlibrary(pharmaverseadam)\nlibrary(tern)\nlibrary(dplyr)\n\nadsl &lt;- adsl %&gt;%\n  df_explicit_na()\n/home/runner/work/examples/examples/tlg/demographic.R",
    "crumbs": [
      "TLG",
      "Demographic Table"
    ]
  },
  {
    "objectID": "tlg/demographic.html#start-preprocessing",
    "href": "tlg/demographic.html#start-preprocessing",
    "title": "Demographic Table",
    "section": "Start preprocessing",
    "text": "Start preprocessing\nNow we will add some pre-processing to create some extra formatted variables ready for display in the table.\n\n# Create categorical variables\nadsl &lt;- adsl %&gt;%\n  mutate(\n    SEX = factor(case_when(\n      SEX == \"M\" ~ \"Male\",\n      SEX == \"F\" ~ \"Female\",\n      SEX == \"U\" ~ \"Unknown\",\n      SEX == \"UNDIFFERENTIATED\" ~ \"Undifferentiated\"\n    )),\n    AGEGR1 = factor(\n      case_when(\n        between(AGE, 18, 40) ~ \"18-40\",\n        between(AGE, 41, 64) ~ \"41-64\",\n        AGE &gt; 64 ~ \"&gt;=65\"\n      ),\n      levels = c(\"18-40\", \"41-64\", \"&gt;=65\")\n    )\n  )\n/home/runner/work/examples/examples/tlg/demographic.R",
    "crumbs": [
      "TLG",
      "Demographic Table"
    ]
  },
  {
    "objectID": "tlg/demographic.html#demographic-table",
    "href": "tlg/demographic.html#demographic-table",
    "title": "Demographic Table",
    "section": "Demographic table",
    "text": "Demographic table\nNow we create the demographic table.\n\nvars &lt;- c(\"AGE\", \"AGEGR1\", \"SEX\", \"RACE\")\nvar_labels &lt;- c(\n  \"Age (yr)\",\n  \"Age group\",\n  \"Sex\",\n  \"Race\"\n)\n\nlyt &lt;- basic_table(show_colcounts = TRUE) %&gt;%\n  split_cols_by(var = \"ACTARM\") %&gt;%\n  add_overall_col(\"All Patients\") %&gt;%\n  analyze_vars(\n    vars = vars,\n    var_labels = var_labels\n  )\n\nresult &lt;- build_table(lyt, adsl)\n\nresult\n\n                                       Placebo     Screen Failure   Xanomeline High Dose   Xanomeline Low Dose   All Patients\n                                       (N=86)          (N=52)              (N=72)                (N=96)            (N=306)   \n—————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————\nAge (yr)                                                                                                                     \n  n                                      86              52                  72                    96                306     \n  Mean (SD)                          75.2 (8.6)      75.1 (9.7)          73.8 (7.9)            76.0 (8.1)         75.1 (8.5) \n  Median                                76.0            76.0                75.5                  78.0               77.0    \n  Min - Max                          52.0 - 89.0    50.0 - 89.0         56.0 - 88.0            51.0 - 88.0       50.0 - 89.0 \nAge group                                                                                                                    \n  n                                      86              52                  72                    96                306     \n  18-40                                   0              0                   0                      0                 0      \n  41-64                              14 (16.3%)      9 (17.3%)           11 (15.3%)             8 (8.3%)          42 (13.7%) \n  &gt;=65                               72 (83.7%)      43 (82.7%)          61 (84.7%)            88 (91.7%)        264 (86.3%) \nSex                                                                                                                          \n  n                                      86              52                  72                    96                306     \n  Female                             53 (61.6%)      36 (69.2%)          35 (48.6%)            55 (57.3%)        179 (58.5%) \n  Male                               33 (38.4%)      16 (30.8%)          37 (51.4%)            41 (42.7%)        127 (41.5%) \nRace                                                                                                                         \n  n                                      86              52                  72                    96                306     \n  AMERICAN INDIAN OR ALASKA NATIVE        0           1 (1.9%)            1 (1.4%)                  0              2 (0.7%)  \n  ASIAN                                   0           2 (3.8%)               0                      0              2 (0.7%)  \n  BLACK OR AFRICAN AMERICAN           8 (9.3%)       6 (11.5%)           9 (12.5%)              6 (6.2%)          29 (9.5%)  \n  WHITE                              78 (90.7%)      43 (82.7%)          62 (86.1%)            90 (93.8%)        273 (89.2%) \n\n/home/runner/work/examples/examples/tlg/demographic.R",
    "crumbs": [
      "TLG",
      "Demographic Table"
    ]
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "pharmaverse examples",
    "section": "",
    "text": "The true beauty of pharmaverse (and open source in general) is when efforts from various different developers come together to compliment each other as a whole greater than the sum of the individual parts. By design in R, no single package will ever completely cover all your needs, but by piecing them together we can make complex tasks increasingly simple.\nThis book contains end-to-end examples of using pharmaverse packages together to achieve common clinical reporting analyses, such as ADaM and Tables/Listings/Graphs. The examples use consistent source test SDTMs and ADaMs from {pharmaversesdtm} and {pharmaverseadam} respectively.\nWe’ll endeavour to include a selection of examples here over time, e.g. to help users when trying out the packages for PK/PD or Therapeutic Area specific (such as Oncology or Vaccines) analyses.\nNote that this examples book should only be used to show how collections of packages can be used in conjunction - more thorough examples of individual package usages would always be covered in the package site vignettes and no need to repeat here.",
    "crumbs": [
      "Introduction"
    ]
  },
  {
    "objectID": "index.html#running-the-examples",
    "href": "index.html#running-the-examples",
    "title": "pharmaverse examples",
    "section": "Running the examples",
    "text": "Running the examples\n\nPosit Cloud\nEach example can be explored via a live and interactive Posit Cloud environment (preconfigured with all required package installations). Click here: “Launch Posit Cloud” to try out any of the examples code. You can do this by clicking File: Open File: and then choosing whichever example script, e.g. adam/adsl.R. Feel free to try out customizing any of the examples to better fit any of your own internal clinical reporting workflows!\n\n\nLocally\nTo run examples locally, download the repository and run the following in the R console inside the project folder to install dependencies\nif(!require(pak)) {\n  install.packages(\"pak\")\n}\npak::pak()\nNote: the R scripts are generated from .qmd files automatically using knitr::purl.",
    "crumbs": [
      "Introduction"
    ]
  },
  {
    "objectID": "index.html#contributing",
    "href": "index.html#contributing",
    "title": "pharmaverse examples",
    "section": "Contributing",
    "text": "Contributing\nIf you are interesting in contributing an article to this book, then see more in our GitHub repo README.\nYou can see a list of current contributors via our GitHub repo DESCRIPTION file.",
    "crumbs": [
      "Introduction"
    ]
  },
  {
    "objectID": "logging/logging.html",
    "href": "logging/logging.html",
    "title": "The Difference Between logr And logrx",
    "section": "",
    "text": "The logr package for R aims to provide a straightforward logging system tailored for everyday users, such as statisticians and educators, emphasizing simplicity in recording program execution. In contrast, logrx offers an advanced logging mechanism designed specifically for clinical reporting, featuring easy traceability and reproducibility of R script executions with capabilities suited for more technical users.\nBoth packages are used for keeping a record of what happens when R scripts are run, but they differ in what they offer and who they’re for. When choosing between them, you should consider what you need for your particular situation.\n\nExecution\nEach package differs notably in the approach to generating a log file. The logr package adopts a method similar to SAS, where the log is manually constructed at intermediary steps within the R script. Conversely, the logrx package allows for the creation of a log file through a single command from the R terminal, offering added compatibility for command line submission.\n\nlogrlogrx\n\n\n\n# file: script.R\nlibrary(dplyr)\nlibrary(logr)\n\nfile_path &lt;- \"script.log\"\nlog_file &lt;- log_open(file_path)\n\nlog_print(\"Analyzing Fuel Efficiency Trends in Cars\")\n\naverage_mpg &lt;- mtcars %&gt;%\n  group_by(cyl) %&gt;%\n  summarise(average_mpg = mean(mpg, na.rm = TRUE))\n\nlog_print(average_mpg)\n\nmodel &lt;- lm(mpg ~ wt, data = mtcars)\nsummary(model)\n\nlog_print(model)\n\nlog_close() # log file path: log/script.log\n\n\n\n========================================================================= \nLog Path: ./log/script.log \nWorking Directory: /Users/davidblair/My Drive/Appsilon/Work Projects/examples \nUser Name: davidblair \nR Version: 4.3.3 (2024-02-29) \nMachine: Davids-Air.localdomain arm64 \nOperating System: Darwin 23.4.0 Darwin Kernel Version 23.4.0: Fri Mar 15 00:12:41 PDT 2024; root:xnu-10063.101.17~1/RELEASE_ARM64_T8103 \nBase Packages: stats graphics grDevices utils datasets methods base \nOther Packages: dplyr_1.1.4 logr_1.3.6 \nLog Start Time: 2024-04-08 13:25:53.22436 \n========================================================================= \n\nAnalyzing Fuel Efficiency Trends in Cars \n\nNOTE: Log Print Time:  2024-04-08 13:25:53.226347 \nNOTE: Elapsed Time: 0.00139403343200684 secs \n\n# A tibble: 3 × 2\n    cyl average_mpg\n  &lt;dbl&gt;       &lt;dbl&gt;\n1     4        26.7\n2     6        19.7\n3     8        15.1\n\nNOTE: Data frame has 3 rows and 2 columns. \n\nNOTE: Log Print Time:  2024-04-08 13:25:53.254377 \nNOTE: Elapsed Time: 0.0280299186706543 secs \n\n\nCall:\nlm(formula = mpg ~ wt, data = mtcars)\n\nCoefficients:\n(Intercept)           wt  \n     37.285       -5.344  \n\n\nNOTE: Log Print Time:  2024-04-08 13:25:53.267483 \nNOTE: Elapsed Time: 0.013106107711792 secs \n\n========================================================================= \nLog End Time: 2024-04-08 13:25:53.286294 \nLog Elapsed Time: 0 00:00:00 \n========================================================================= \n\n\n\nFrom the R terminal:\n\nlogrx::axecute(\"script.R\")\n\nFrom the Command Line:\n\nRscript -e \"logrx::axecute('script.R')\"\n\n\n--------------------------------------------------------------------------------\n-                                logrx Metadata                                -\n--------------------------------------------------------------------------------\nThis log was generated using logrx 0.3.0\nlogrx package version: 0.3.0\nlogrx build: CRAN (R 4.3.1)\nlogrx link to repository: https://github.com/pharmaverse/logrx\n--------------------------------------------------------------------------------\n-                          User and File Information                           -\n--------------------------------------------------------------------------------\nUser: davidblair\nFile Name: script.R\nFile Path: /Users/davidblair/My Drive/Appsilon/Work Projects/examples/logging\nFile HashSum: 76f9dd029df25ba4f65de72631fac248fa30d7d5\n--------------------------------------------------------------------------------\n-                             Session Information                              -\n--------------------------------------------------------------------------------\n─ Session info ─────────────────────────────────────────────────────────────────\n setting  value\n version  R version 4.3.3 (2024-02-29)\n os       macOS Sonoma 14.4.1\n system   aarch64, darwin20\n ui       X11\n language (EN)\n collate  en_US.UTF-8\n ctype    en_US.UTF-8\n tz       Europe/London\n date     2024-04-08\n pandoc   NA\n\n─ Packages ─────────────────────────────────────────────────────────────────────\n ! package     * version date (UTC) lib source\n   cachem        1.0.8   2023-05-01 [1] CRAN (R 4.3.0)\n   callr         3.7.6   2024-03-25 [1] CRAN (R 4.3.1)\n   cli           3.6.2   2023-12-11 [1] CRAN (R 4.3.1)\n   common        1.1.2   2024-03-05 [1] CRAN (R 4.3.1)\n   curl          5.2.1   2024-03-01 [1] CRAN (R 4.3.1)\n   desc          1.4.3   2023-12-10 [1] CRAN (R 4.3.1)\n   devtools      2.4.5   2022-10-11 [1] CRAN (R 4.3.0)\n   digest        0.6.35  2024-03-11 [1] CRAN (R 4.3.1)\n   dplyr       * 1.1.4   2023-11-17 [1] CRAN (R 4.3.1)\n   ellipsis      0.3.2   2021-04-29 [1] CRAN (R 4.3.0)\n   fansi         1.0.6   2023-12-08 [1] CRAN (R 4.3.1)\n   fastmap       1.1.1   2023-02-24 [1] CRAN (R 4.3.0)\n   fs            1.6.3   2023-07-20 [1] CRAN (R 4.3.0)\n   generics      0.1.3   2022-07-05 [1] CRAN (R 4.3.0)\n   glue          1.7.0   2024-01-09 [1] CRAN (R 4.3.1)\n   htmltools     0.5.8.1 2024-04-04 [1] CRAN (R 4.3.1)\n   htmlwidgets   1.6.4   2023-12-06 [1] CRAN (R 4.3.1)\n   httpuv        1.6.15  2024-03-26 [1] CRAN (R 4.3.1)\n   later         1.3.2   2023-12-06 [1] CRAN (R 4.3.1)\n   lifecycle     1.0.4   2023-11-07 [1] CRAN (R 4.3.1)\n V logr        * 1.3.7   2024-02-24 [1] CRAN (R 4.3.1) (on disk 1.3.6)\n   logrx         0.3.0   2023-10-17 [1] CRAN (R 4.3.1)\n   magrittr      2.0.3   2022-03-30 [1] CRAN (R 4.3.0)\n   memoise       2.0.1   2021-11-26 [1] CRAN (R 4.3.0)\n   mime          0.12    2021-09-28 [1] CRAN (R 4.3.0)\n   miniUI        0.1.1.1 2018-05-18 [1] CRAN (R 4.3.0)\n   pillar        1.9.0   2023-03-22 [1] CRAN (R 4.3.0)\n   pkgbuild      1.4.4   2024-03-17 [1] CRAN (R 4.3.1)\n   pkgconfig     2.0.3   2019-09-22 [1] CRAN (R 4.3.0)\n   pkgload       1.3.4   2024-01-16 [1] CRAN (R 4.3.1)\n   processx      3.8.4   2024-03-16 [1] CRAN (R 4.3.1)\n   profvis       0.3.8   2023-05-02 [1] CRAN (R 4.3.0)\n   promises      1.2.1   2023-08-10 [1] CRAN (R 4.3.0)\n   ps            1.7.6   2024-01-18 [1] CRAN (R 4.3.1)\n   purrr         1.0.2   2023-08-10 [1] CRAN (R 4.3.0)\n   R6            2.5.1   2021-08-19 [1] CRAN (R 4.3.0)\n   Rcpp          1.0.12  2024-01-09 [1] CRAN (R 4.3.1)\n   remotes       2.4.2.1 2023-07-18 [1] CRAN (R 4.3.0)\n   rlang         1.1.3   2024-01-10 [1] CRAN (R 4.3.1)\n   rstudioapi    0.15.0  2023-07-07 [1] CRAN (R 4.3.0)\n   sessioninfo   1.2.2   2021-12-06 [1] CRAN (R 4.3.0)\n   shiny         1.8.1.1 2024-04-02 [1] CRAN (R 4.3.1)\n   stringi       1.8.3   2023-12-11 [1] CRAN (R 4.3.1)\n   stringr       1.5.1   2023-11-14 [1] CRAN (R 4.3.1)\n   tibble        3.2.1   2023-03-20 [1] CRAN (R 4.3.0)\n   tidyr         1.3.1   2024-01-24 [1] CRAN (R 4.3.1)\n   tidyselect    1.2.1   2024-03-11 [1] CRAN (R 4.3.1)\n   urlchecker    1.0.1   2021-11-30 [1] CRAN (R 4.3.0)\n   usethis       2.2.3   2024-02-19 [1] CRAN (R 4.3.1)\n   utf8          1.2.4   2023-10-22 [1] CRAN (R 4.3.1)\n   vctrs         0.6.5   2023-12-01 [1] CRAN (R 4.3.1)\n   waiter        0.2.5   2022-01-03 [1] CRAN (R 4.3.0)\n   withr         3.0.0   2024-01-16 [1] CRAN (R 4.3.1)\n   xtable        1.8-4   2019-04-21 [1] CRAN (R 4.3.0)\n\n [1] /Library/Frameworks/R.framework/Versions/4.3-arm64/Resources/library\n\n V ── Loaded and on-disk version mismatch.\n\n─ External software ────────────────────────────────────────────────────────────\n setting        value\n cairo\n cairoFT\n pango\n png\n jpeg\n tiff\n tcl\n curl           8.4.0\n zlib           1.2.12\n bzlib          1.0.8, 13-Jul-2019\n xz             5.4.4\n PCRE           10.42 2022-12-11\n ICU            74.1\n TRE            TRE 0.8.0 R_fixes (BSD)\n iconv          Apple or GNU libiconv 1.11\n readline       5.2\n\n      BLAS           /Library/Frameworks/R.framework/Versions/4.3-arm64/Resources/lib/libRblas.0.dylib\n\n      lapack         /Library/Frameworks/R.framework/Versions/4.3-arm64/Resources/lib/libRlapack.dylib\n lapack_version 3.11.0\n\n─ Python configuration ─────────────────────────────────────────────────────────\n Python is not available\n\n────────────────────────────────────────────────────────────────────────────────\n--------------------------------------------------------------------------------\n-                               Masked Functions                               -\n--------------------------------------------------------------------------------\nfunction `filter` from {package:stats} by package:dplyr\nfunction `lag` from {package:stats} by package:dplyr\nfunction `intersect` from {package:base} by package:dplyr\nfunction `setdiff` from {package:base} by package:dplyr\nfunction `setequal` from {package:base} by package:dplyr\nfunction `union` from {package:base} by package:dplyr\nfunction `plot` from {package:base} by package:graphics\nfunction `body&lt;-` from {package:base} by package:methods\nfunction `kronecker` from {package:base} by package:methods\n--------------------------------------------------------------------------------\n-                          Used Package and Functions                          -\n--------------------------------------------------------------------------------\n{package:base} library, mean, summary\n{package:dplyr} %&gt;%, group_by, summarise\n{package:stats} lm\n--------------------------------------------------------------------------------\n-                         Program Run Time Information                         -\n--------------------------------------------------------------------------------\nStart time: 2024-04-08 14:15:26 BST\nEnd time: 2024-04-08 14:15:26 BST\nRun time: 0 seconds\n--------------------------------------------------------------------------------\n-                             Errors and Warnings                              -\n--------------------------------------------------------------------------------\nErrors:\n    \n\nWarnings:\n    \n--------------------------------------------------------------------------------\n-                         Messages, Output, and Result                         -\n--------------------------------------------------------------------------------\nMessages:\n    \nOutput:\n    \n\nResult:\n    \n    Call:\n    lm(formula = mpg ~ wt, data = mtcars)\n    \n    Residuals:\n        Min      1Q  Median      3Q     Max \n    -4.5432 -2.3647 -0.1252  1.4096  6.8727 \n    \n    Coefficients:\n                Estimate Std. Error t value Pr(&gt;|t|)    \n    (Intercept)  37.2851     1.8776  19.858  &lt; 2e-16 ***\n    wt           -5.3445     0.5591  -9.559 1.29e-10 ***\n    ---\n    Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1\n    \n    Residual standard error: 3.046 on 30 degrees of freedom\n    Multiple R-squared:  0.7528,    Adjusted R-squared:  0.7446 \n    F-statistic: 91.38 on 1 and 30 DF,  p-value: 1.294e-10\n    \n--------------------------------------------------------------------------------\n-                               Log Output File                                -\n--------------------------------------------------------------------------------\nLog name: script.log\nLog path: /Users/davidblair/My Drive/Appsilon/Work Projects/examples/logging\n\n\n\n\n\n\nInformation in the Log\nThe logrx package offers more detailed output compared to logr, as outlined in the following table. A key distinction is that logrx automatically logs code output. In logr, the user has control over what does or does not get logged. The user can specify which variables, objects, or datasets to send to the log. If the ‘autolog’ feature is activated, output from dplyr and sassy functions are logged automatically.\n\n\n\n\n\n\n\nlogr\nlogrx\n\n\n\n\nLog Path\n✔\n✔\n\n\nWorking Directory\n✔\n✔\n\n\nUser Name\n✔\n✔\n\n\nR Version\n✔\n✔\n\n\nMachine\n✔\n✔\n\n\nOperating System\n✔\n✔\n\n\nBase Packages\n✔\n✔\n\n\nOther Packages\n✔\n✔\n\n\nLog Start Time\n✔\n✔\n\n\nWarnings and Errors\n✔\n✔\n\n\nElapsed Time\n✔\n✔\n\n\nFile Hash\n\n✔\n\n\nPackage Dependencies\n\n✔\n\n\nExternal Software\n\n✔\n\n\nMasked Functions\n\n✔\n\n\n\n\n\nLinting\nThe logrx tool enables the inclusion of lintR output within log messages (line 146 - 165 below). To utilize this feature, configure the log.rx.lint global option with a selection of lint rules. A comprehensive list of available rules can be accessed here.\n\noptions(log.rx.lint = list(\n  lintr::line_length_linter(20)\n))\n\nlibrary(logrx)\naxecute(\"script.R\")\n\n\n--------------------------------------------------------------------------------\n-                                logrx Metadata                                -\n--------------------------------------------------------------------------------\nThis log was generated using logrx 0.3.0\nlogrx package version: 0.3.0\nlogrx build: CRAN (R 4.3.1)\nlogrx link to repository: https://github.com/pharmaverse/logrx\n--------------------------------------------------------------------------------\n-                          User and File Information                           -\n--------------------------------------------------------------------------------\nUser: davidblair\nFile Name: script.R\nFile Path: /Users/davidblair/My Drive/Appsilon/Work Projects/examples/logging\nFile HashSum: 76f9dd029df25ba4f65de72631fac248fa30d7d5\n--------------------------------------------------------------------------------\n-                             Session Information                              -\n--------------------------------------------------------------------------------\n─ Session info ─────────────────────────────────────────────────────────────────\n setting  value\n version  R version 4.3.3 (2024-02-29)\n os       macOS Sonoma 14.4.1\n system   aarch64, darwin20\n ui       X11\n language (EN)\n collate  en_US.UTF-8\n ctype    en_US.UTF-8\n tz       Europe/London\n date     2024-04-08\n pandoc   NA\n\n─ Packages ─────────────────────────────────────────────────────────────────────\n ! package      * version date (UTC) lib source\n   backports      1.4.1   2021-12-13 [1] CRAN (R 4.3.0)\n   cachem         1.0.8   2023-05-01 [1] CRAN (R 4.3.0)\n   callr          3.7.6   2024-03-25 [1] CRAN (R 4.3.1)\n   cli            3.6.2   2023-12-11 [1] CRAN (R 4.3.1)\n   common         1.1.2   2024-03-05 [1] CRAN (R 4.3.1)\n   crayon         1.5.2   2022-09-29 [1] CRAN (R 4.3.0)\n   curl           5.2.1   2024-03-01 [1] CRAN (R 4.3.1)\n   cyclocomp      1.1.1   2023-08-30 [1] CRAN (R 4.3.0)\n   desc           1.4.3   2023-12-10 [1] CRAN (R 4.3.1)\n   devtools       2.4.5   2022-10-11 [1] CRAN (R 4.3.0)\n   digest         0.6.35  2024-03-11 [1] CRAN (R 4.3.1)\n   dplyr        * 1.1.4   2023-11-17 [1] CRAN (R 4.3.1)\n   ellipsis       0.3.2   2021-04-29 [1] CRAN (R 4.3.0)\n   fansi          1.0.6   2023-12-08 [1] CRAN (R 4.3.1)\n   fastmap        1.1.1   2023-02-24 [1] CRAN (R 4.3.0)\n   fs             1.6.3   2023-07-20 [1] CRAN (R 4.3.0)\n   generics       0.1.3   2022-07-05 [1] CRAN (R 4.3.0)\n   glue           1.7.0   2024-01-09 [1] CRAN (R 4.3.1)\n   htmltools      0.5.8.1 2024-04-04 [1] CRAN (R 4.3.1)\n   htmlwidgets    1.6.4   2023-12-06 [1] CRAN (R 4.3.1)\n   httpuv         1.6.15  2024-03-26 [1] CRAN (R 4.3.1)\n   later          1.3.2   2023-12-06 [1] CRAN (R 4.3.1)\n   lazyeval       0.2.2   2019-03-15 [1] CRAN (R 4.3.0)\n   lifecycle      1.0.4   2023-11-07 [1] CRAN (R 4.3.1)\n   lintr          3.1.2   2024-03-25 [1] CRAN (R 4.3.1)\n V logr         * 1.3.7   2024-02-24 [1] CRAN (R 4.3.1) (on disk 1.3.6)\n   logrx        * 0.3.0   2023-10-17 [1] CRAN (R 4.3.1)\n   magrittr       2.0.3   2022-03-30 [1] CRAN (R 4.3.0)\n   memoise        2.0.1   2021-11-26 [1] CRAN (R 4.3.0)\n   mime           0.12    2021-09-28 [1] CRAN (R 4.3.0)\n   miniUI         0.1.1.1 2018-05-18 [1] CRAN (R 4.3.0)\n   pillar         1.9.0   2023-03-22 [1] CRAN (R 4.3.0)\n   pkgbuild       1.4.4   2024-03-17 [1] CRAN (R 4.3.1)\n   pkgconfig      2.0.3   2019-09-22 [1] CRAN (R 4.3.0)\n   pkgload        1.3.4   2024-01-16 [1] CRAN (R 4.3.1)\n   processx       3.8.4   2024-03-16 [1] CRAN (R 4.3.1)\n   profvis        0.3.8   2023-05-02 [1] CRAN (R 4.3.0)\n   promises       1.2.1   2023-08-10 [1] CRAN (R 4.3.0)\n   ps             1.7.6   2024-01-18 [1] CRAN (R 4.3.1)\n   purrr          1.0.2   2023-08-10 [1] CRAN (R 4.3.0)\n   R6             2.5.1   2021-08-19 [1] CRAN (R 4.3.0)\n   Rcpp           1.0.12  2024-01-09 [1] CRAN (R 4.3.1)\n   remotes        2.4.2.1 2023-07-18 [1] CRAN (R 4.3.0)\n   rex            1.2.1   2021-11-26 [1] CRAN (R 4.3.0)\n   rlang          1.1.3   2024-01-10 [1] CRAN (R 4.3.1)\n   rstudioapi     0.15.0  2023-07-07 [1] CRAN (R 4.3.0)\n   sessioninfo    1.2.2   2021-12-06 [1] CRAN (R 4.3.0)\n   shiny          1.8.1.1 2024-04-02 [1] CRAN (R 4.3.1)\n   stringi        1.8.3   2023-12-11 [1] CRAN (R 4.3.1)\n   stringr        1.5.1   2023-11-14 [1] CRAN (R 4.3.1)\n   tibble         3.2.1   2023-03-20 [1] CRAN (R 4.3.0)\n   tidyr          1.3.1   2024-01-24 [1] CRAN (R 4.3.1)\n   tidyselect     1.2.1   2024-03-11 [1] CRAN (R 4.3.1)\n   urlchecker     1.0.1   2021-11-30 [1] CRAN (R 4.3.0)\n   usethis        2.2.3   2024-02-19 [1] CRAN (R 4.3.1)\n   utf8           1.2.4   2023-10-22 [1] CRAN (R 4.3.1)\n   vctrs          0.6.5   2023-12-01 [1] CRAN (R 4.3.1)\n   waiter         0.2.5   2022-01-03 [1] CRAN (R 4.3.0)\n   withr          3.0.0   2024-01-16 [1] CRAN (R 4.3.1)\n   xml2           1.3.6   2023-12-04 [1] CRAN (R 4.3.1)\n   xmlparsedata   1.0.5   2021-03-06 [1] CRAN (R 4.3.0)\n   xtable         1.8-4   2019-04-21 [1] CRAN (R 4.3.0)\n\n [1] /Library/Frameworks/R.framework/Versions/4.3-arm64/Resources/library\n\n V ── Loaded and on-disk version mismatch.\n\n─ External software ────────────────────────────────────────────────────────────\n setting        value\n cairo\n cairoFT\n pango\n png\n jpeg\n tiff\n tcl\n curl           8.4.0\n zlib           1.2.12\n bzlib          1.0.8, 13-Jul-2019\n xz             5.4.4\n PCRE           10.42 2022-12-11\n ICU            74.1\n TRE            TRE 0.8.0 R_fixes (BSD)\n iconv          Apple or GNU libiconv 1.11\n readline       5.2\n\n      BLAS           /Library/Frameworks/R.framework/Versions/4.3-arm64/Resources/lib/libRblas.0.dylib\n\n      lapack         /Library/Frameworks/R.framework/Versions/4.3-arm64/Resources/lib/libRlapack.dylib\n lapack_version 3.11.0\n\n─ Python configuration ─────────────────────────────────────────────────────────\n Python is not available\n\n────────────────────────────────────────────────────────────────────────────────\n--------------------------------------------------------------------------------\n-                               Masked Functions                               -\n--------------------------------------------------------------------------------\nfunction `filter` from {package:stats} by package:dplyr\nfunction `lag` from {package:stats} by package:dplyr\nfunction `intersect` from {package:base} by package:dplyr\nfunction `setdiff` from {package:base} by package:dplyr\nfunction `setequal` from {package:base} by package:dplyr\nfunction `union` from {package:base} by package:dplyr\nfunction `plot` from {package:base} by package:graphics\nfunction `body&lt;-` from {package:base} by package:methods\nfunction `kronecker` from {package:base} by package:methods\n--------------------------------------------------------------------------------\n-                          Used Package and Functions                          -\n--------------------------------------------------------------------------------\n{package:base} library, mean, summary\n{package:dplyr} %&gt;%, group_by, summarise\n{package:stats} lm\n--------------------------------------------------------------------------------\n-                                Linter Results                                -\n--------------------------------------------------------------------------------\nLine 1 [line_length_linter] Lines should not be more than 20 characters. This\nline is 22 characters.\n\nLine 5 [line_length_linter] Lines should not be more than 20 characters. This\nline is 25 characters.\n\nLine 7 [line_length_linter] Lines should not be more than 20 characters. This\nline is 25 characters.\n\nLine 9 [line_length_linter] Lines should not be more than 20 characters. This\nline is 50 characters.\n\nLine 11 [line_length_linter] Lines should not be more than 20 characters.\nThis line is 36 characters.\n\nLine 14 [line_length_linter] Lines should not be more than 20 characters.\nThis line is 27 characters.\n--------------------------------------------------------------------------------\n-                         Program Run Time Information                         -\n--------------------------------------------------------------------------------\nStart time: 2024-04-08 15:26:12 BST\nEnd time: 2024-04-08 15:26:12 BST\nRun time: 0 seconds\n--------------------------------------------------------------------------------\n-                             Errors and Warnings                              -\n--------------------------------------------------------------------------------\nErrors:\n    \n\nWarnings:\n    \n--------------------------------------------------------------------------------\n-                         Messages, Output, and Result                         -\n--------------------------------------------------------------------------------\nMessages:\n    \nOutput:\n    \n\nResult:\n    \n    Call:\n    lm(formula = mpg ~ wt, data = mtcars)\n    \n    Residuals:\n        Min      1Q  Median      3Q     Max \n    -4.5432 -2.3647 -0.1252  1.4096  6.8727 \n    \n    Coefficients:\n                Estimate Std. Error t value Pr(&gt;|t|)    \n    (Intercept)  37.2851     1.8776  19.858  &lt; 2e-16 ***\n    wt           -5.3445     0.5591  -9.559 1.29e-10 ***\n    ---\n    Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1\n    \n    Residual standard error: 3.046 on 30 degrees of freedom\n    Multiple R-squared:  0.7528,    Adjusted R-squared:  0.7446 \n    F-statistic: 91.38 on 1 and 30 DF,  p-value: 1.294e-10\n    \n--------------------------------------------------------------------------------\n-                               Log Output File                                -\n--------------------------------------------------------------------------------\nLog name: script.log\nLog path: /Users/davidblair/My Drive/Appsilon/Work Projects/examples/logging\n\n\n\nGlobal Options\nWe’ve previously discussed the global options in the logrx package that enable the inclusion of lintr output in the log. There are several key differences between the global options in logrx and those in logr. The options in logr primarily focus on managing script output, whereas those in logrx influence the scope of information included, regardless of the script output.\n\nlogrlogrx\n\n\n\nlogr.autolog: Enables automatic logging for various dplyr and tidyr functions.\nlogr.compact: Removes any blanks spaces between log entries.\nlogr.traceback: Includes the full traceback for errors.\nlogr.warnings: Retrieves warnings encountered during log file generation, used with getOption.\nlogr.on: Controls whether the logr log is active.\nlogr.notes: Includes notes within the log.\n\n\n\n\nlog.rx: A blank log environment for storing log elements during execution.\nlog.rx.exec.env: The execution environment for program code.\nlog.rx.lint: Contains lintr functions/rules for script analysis.\nlog.rx.approved: Specifies the location of approved functions.\n\n\n\n\n\n\nApproved Functions\nlogrx features the ability to designate approved functions, highlighting any functions in the script not on this list within the log file. This enhances traceability of package and function use within a validated environment.\nTo utilize this feature, begin by creating a list of approved functions:\n\napproved_pkgs &lt;- list(base = \"mean\",\n                      dplyr = \"All\")\n\nNext, build the approved_pkgs list and save its contents to a file:\n\nlibrary(logrx)\nbuild_approved(approved_pkgs, file = \"approved.rds\")\n\nFinally, assign the file to the global option log.rx.approved. This ensures the analysis is incorporated into the log (refer to lines 140 - 145 below):\n\noptions(log.rv.approved = \"approved.rds\")\n\n\naxecute(\"script.R\")\n\n\n--------------------------------------------------------------------------------\n-                                logrx Metadata                                -\n--------------------------------------------------------------------------------\nThis log was generated using logrx 0.3.0\nlogrx package version: 0.3.0\nlogrx build: CRAN (R 4.3.1)\nlogrx link to repository: https://github.com/pharmaverse/logrx\n--------------------------------------------------------------------------------\n-                          User and File Information                           -\n--------------------------------------------------------------------------------\nUser: davidblair\nFile Name: script.R\nFile Path: /Users/davidblair/My Drive/Appsilon/Work Projects/examples/logging\nFile HashSum: 76f9dd029df25ba4f65de72631fac248fa30d7d5\n--------------------------------------------------------------------------------\n-                             Session Information                              -\n--------------------------------------------------------------------------------\n─ Session info ─────────────────────────────────────────────────────────────────\n setting  value\n version  R version 4.3.3 (2024-02-29)\n os       macOS Sonoma 14.4.1\n system   aarch64, darwin20\n ui       X11\n language (EN)\n collate  en_US.UTF-8\n ctype    en_US.UTF-8\n tz       Europe/London\n date     2024-04-08\n pandoc   NA\n\n─ Packages ─────────────────────────────────────────────────────────────────────\n ! package      * version date (UTC) lib source\n   backports      1.4.1   2021-12-13 [1] CRAN (R 4.3.0)\n   cachem         1.0.8   2023-05-01 [1] CRAN (R 4.3.0)\n   callr          3.7.6   2024-03-25 [1] CRAN (R 4.3.1)\n   cli            3.6.2   2023-12-11 [1] CRAN (R 4.3.1)\n   common         1.1.2   2024-03-05 [1] CRAN (R 4.3.1)\n   crayon         1.5.2   2022-09-29 [1] CRAN (R 4.3.0)\n   curl           5.2.1   2024-03-01 [1] CRAN (R 4.3.1)\n   cyclocomp      1.1.1   2023-08-30 [1] CRAN (R 4.3.0)\n   desc           1.4.3   2023-12-10 [1] CRAN (R 4.3.1)\n   devtools       2.4.5   2022-10-11 [1] CRAN (R 4.3.0)\n   digest         0.6.35  2024-03-11 [1] CRAN (R 4.3.1)\n   dplyr        * 1.1.4   2023-11-17 [1] CRAN (R 4.3.1)\n   ellipsis       0.3.2   2021-04-29 [1] CRAN (R 4.3.0)\n   fansi          1.0.6   2023-12-08 [1] CRAN (R 4.3.1)\n   fastmap        1.1.1   2023-02-24 [1] CRAN (R 4.3.0)\n   fs             1.6.3   2023-07-20 [1] CRAN (R 4.3.0)\n   generics       0.1.3   2022-07-05 [1] CRAN (R 4.3.0)\n   glue           1.7.0   2024-01-09 [1] CRAN (R 4.3.1)\n   htmltools      0.5.8.1 2024-04-04 [1] CRAN (R 4.3.1)\n   htmlwidgets    1.6.4   2023-12-06 [1] CRAN (R 4.3.1)\n   httpuv         1.6.15  2024-03-26 [1] CRAN (R 4.3.1)\n   later          1.3.2   2023-12-06 [1] CRAN (R 4.3.1)\n   lazyeval       0.2.2   2019-03-15 [1] CRAN (R 4.3.0)\n   lifecycle      1.0.4   2023-11-07 [1] CRAN (R 4.3.1)\n   lintr          3.1.2   2024-03-25 [1] CRAN (R 4.3.1)\n V logr         * 1.3.7   2024-02-24 [1] CRAN (R 4.3.1) (on disk 1.3.6)\n   logrx        * 0.3.0   2023-10-17 [1] CRAN (R 4.3.1)\n   magrittr       2.0.3   2022-03-30 [1] CRAN (R 4.3.0)\n   memoise        2.0.1   2021-11-26 [1] CRAN (R 4.3.0)\n   mime           0.12    2021-09-28 [1] CRAN (R 4.3.0)\n   miniUI         0.1.1.1 2018-05-18 [1] CRAN (R 4.3.0)\n   pillar         1.9.0   2023-03-22 [1] CRAN (R 4.3.0)\n   pkgbuild       1.4.4   2024-03-17 [1] CRAN (R 4.3.1)\n   pkgconfig      2.0.3   2019-09-22 [1] CRAN (R 4.3.0)\n   pkgload        1.3.4   2024-01-16 [1] CRAN (R 4.3.1)\n   processx       3.8.4   2024-03-16 [1] CRAN (R 4.3.1)\n   profvis        0.3.8   2023-05-02 [1] CRAN (R 4.3.0)\n   promises       1.2.1   2023-08-10 [1] CRAN (R 4.3.0)\n   ps             1.7.6   2024-01-18 [1] CRAN (R 4.3.1)\n   purrr          1.0.2   2023-08-10 [1] CRAN (R 4.3.0)\n   R6             2.5.1   2021-08-19 [1] CRAN (R 4.3.0)\n   Rcpp           1.0.12  2024-01-09 [1] CRAN (R 4.3.1)\n   remotes        2.4.2.1 2023-07-18 [1] CRAN (R 4.3.0)\n   rex            1.2.1   2021-11-26 [1] CRAN (R 4.3.0)\n   rlang          1.1.3   2024-01-10 [1] CRAN (R 4.3.1)\n   rstudioapi     0.15.0  2023-07-07 [1] CRAN (R 4.3.0)\n   sessioninfo    1.2.2   2021-12-06 [1] CRAN (R 4.3.0)\n   shiny          1.8.1.1 2024-04-02 [1] CRAN (R 4.3.1)\n   stringi        1.8.3   2023-12-11 [1] CRAN (R 4.3.1)\n   stringr        1.5.1   2023-11-14 [1] CRAN (R 4.3.1)\n   tibble         3.2.1   2023-03-20 [1] CRAN (R 4.3.0)\n   tidyr          1.3.1   2024-01-24 [1] CRAN (R 4.3.1)\n   tidyselect     1.2.1   2024-03-11 [1] CRAN (R 4.3.1)\n   urlchecker     1.0.1   2021-11-30 [1] CRAN (R 4.3.0)\n   usethis        2.2.3   2024-02-19 [1] CRAN (R 4.3.1)\n   utf8           1.2.4   2023-10-22 [1] CRAN (R 4.3.1)\n   vctrs          0.6.5   2023-12-01 [1] CRAN (R 4.3.1)\n   waiter         0.2.5   2022-01-03 [1] CRAN (R 4.3.0)\n   withr          3.0.0   2024-01-16 [1] CRAN (R 4.3.1)\n   xml2           1.3.6   2023-12-04 [1] CRAN (R 4.3.1)\n   xmlparsedata   1.0.5   2021-03-06 [1] CRAN (R 4.3.0)\n   xtable         1.8-4   2019-04-21 [1] CRAN (R 4.3.0)\n\n [1] /Library/Frameworks/R.framework/Versions/4.3-arm64/Resources/library\n\n V ── Loaded and on-disk version mismatch.\n\n─ External software ────────────────────────────────────────────────────────────\n setting        value\n cairo\n cairoFT\n pango\n png\n jpeg\n tiff\n tcl\n curl           8.4.0\n zlib           1.2.12\n bzlib          1.0.8, 13-Jul-2019\n xz             5.4.4\n PCRE           10.42 2022-12-11\n ICU            74.1\n TRE            TRE 0.8.0 R_fixes (BSD)\n iconv          Apple or GNU libiconv 1.11\n readline       5.2\n\n      BLAS           /Library/Frameworks/R.framework/Versions/4.3-arm64/Resources/lib/libRblas.0.dylib\n\n      lapack         /Library/Frameworks/R.framework/Versions/4.3-arm64/Resources/lib/libRlapack.dylib\n lapack_version 3.11.0\n\n─ Python configuration ─────────────────────────────────────────────────────────\n Python is not available\n\n────────────────────────────────────────────────────────────────────────────────\n--------------------------------------------------------------------------------\n-                               Masked Functions                               -\n--------------------------------------------------------------------------------\nfunction `filter` from {package:stats} by package:dplyr\nfunction `lag` from {package:stats} by package:dplyr\nfunction `intersect` from {package:base} by package:dplyr\nfunction `setdiff` from {package:base} by package:dplyr\nfunction `setequal` from {package:base} by package:dplyr\nfunction `union` from {package:base} by package:dplyr\nfunction `plot` from {package:base} by package:graphics\nfunction `body&lt;-` from {package:base} by package:methods\nfunction `kronecker` from {package:base} by package:methods\n--------------------------------------------------------------------------------\n-                          Used Package and Functions                          -\n--------------------------------------------------------------------------------\n{package:base} library, mean, summary\n{package:dplyr} %&gt;%, group_by, summarise\n{package:stats} lm\n--------------------------------------------------------------------------------\n-                       Unapproved Package and Functions                       -\n--------------------------------------------------------------------------------\n{package:base} library, summary\n{package:stats} lm\n--------------------------------------------------------------------------------\n-                                Linter Results                                -\n--------------------------------------------------------------------------------\nLine 1 [line_length_linter] Lines should not be more than 20 characters. This\nline is 22 characters.\n\nLine 5 [line_length_linter] Lines should not be more than 20 characters. This\nline is 25 characters.\n\nLine 7 [line_length_linter] Lines should not be more than 20 characters. This\nline is 25 characters.\n\nLine 9 [line_length_linter] Lines should not be more than 20 characters. This\nline is 50 characters.\n\nLine 11 [line_length_linter] Lines should not be more than 20 characters.\nThis line is 36 characters.\n\nLine 14 [line_length_linter] Lines should not be more than 20 characters.\nThis line is 27 characters.\n--------------------------------------------------------------------------------\n-                         Program Run Time Information                         -\n--------------------------------------------------------------------------------\nStart time: 2024-04-08 16:03:28 BST\nEnd time: 2024-04-08 16:03:28 BST\nRun time: 0 seconds\n--------------------------------------------------------------------------------\n-                             Errors and Warnings                              -\n--------------------------------------------------------------------------------\nErrors:\n    \n\nWarnings:\n    \n--------------------------------------------------------------------------------\n-                         Messages, Output, and Result                         -\n--------------------------------------------------------------------------------\nMessages:\n    \nOutput:\n    \n\nResult:\n    \n    Call:\n    lm(formula = mpg ~ wt, data = mtcars)\n    \n    Residuals:\n        Min      1Q  Median      3Q     Max \n    -4.5432 -2.3647 -0.1252  1.4096  6.8727 \n    \n    Coefficients:\n                Estimate Std. Error t value Pr(&gt;|t|)    \n    (Intercept)  37.2851     1.8776  19.858  &lt; 2e-16 ***\n    wt           -5.3445     0.5591  -9.559 1.29e-10 ***\n    ---\n    Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1\n    \n    Residual standard error: 3.046 on 30 degrees of freedom\n    Multiple R-squared:  0.7528,    Adjusted R-squared:  0.7446 \n    F-statistic: 91.38 on 1 and 30 DF,  p-value: 1.294e-10\n    \n--------------------------------------------------------------------------------\n-                               Log Output File                                -\n--------------------------------------------------------------------------------\nLog name: script.log\nLog path: /Users/davidblair/My Drive/Appsilon/Work Projects/examples/logging\n\n\n\nSummary\nThe decision between using logr and logrx hinges on specific needs. logr offers greater control over the output, at the expense of detailed environmental context. Conversely, logrx provides more comprehensive details and quicker log generation, along with better support for command line execution, but offers less control over the output.",
    "crumbs": [
      "Logs",
      "The Difference Between `logr` And `logrx`"
    ]
  },
  {
    "objectID": "adam/adppk.html",
    "href": "adam/adppk.html",
    "title": "ADPPK",
    "section": "",
    "text": "The Population PK Analysis Data (ADPPK) follows the CDISC Implementation Guide (https://www.cdisc.org/standards/foundational/adam/basic-data-structure-adam-poppk-implementation-guide-v1-0). Population PK models generally make use of nonlinear mixed effects models that require numeric variables. The data used in the models will include both dosing and concentration records, relative time variables, and numeric covariate variables. A DV or dependent variable is often expected. For more details see the {admiral} vignette.",
    "crumbs": [
      "ADAM",
      "ADPPK"
    ]
  },
  {
    "objectID": "adam/adppk.html#first-load-packages",
    "href": "adam/adppk.html#first-load-packages",
    "title": "ADPPK",
    "section": "First Load Packages",
    "text": "First Load Packages\nFirst we will load the packages required for our project. We will use {admiral} for the creation of analysis data. {admiral} requires {dplyr}, {lubridate} and {stringr}. We will use {metacore} and {metatools} to store and manipulate metadata from our specifications. We will use {xportr} to perform checks on the final data and export to a transport file.\nThe source SDTM data will come from the CDISC pilot study data stored in {pharmaversesdtm}.\n\n# Load Packages\nlibrary(admiral)\nlibrary(dplyr)\nlibrary(lubridate)\nlibrary(stringr)\nlibrary(metacore)\nlibrary(metatools)\nlibrary(xportr)\nlibrary(readr)\nlibrary(pharmaversesdtm)\nlibrary(pharmaverseadam)\n/home/runner/work/examples/examples/adam/adppk.R",
    "crumbs": [
      "ADAM",
      "ADPPK"
    ]
  },
  {
    "objectID": "adam/adppk.html#next-load-specifications-for-metacore",
    "href": "adam/adppk.html#next-load-specifications-for-metacore",
    "title": "ADPPK",
    "section": "Next Load Specifications for Metacore",
    "text": "Next Load Specifications for Metacore\nWe have saved our specifications in an Excel file and will load them into {metacore} with the metacore::spec_to_metacore() function.\n\n# ---- Load Specs for Metacore ----\nmetacore &lt;- spec_to_metacore(\"./metadata/pk_spec.xlsx\") %&gt;%\n  select_dataset(\"ADPPK\")\n/home/runner/work/examples/examples/adam/adppk.R",
    "crumbs": [
      "ADAM",
      "ADPPK"
    ]
  },
  {
    "objectID": "adam/adppk.html#load-source-datasets",
    "href": "adam/adppk.html#load-source-datasets",
    "title": "ADPPK",
    "section": "Load Source Datasets",
    "text": "Load Source Datasets\nWe will load are SDTM data from {pharmaversesdtm}. The main components of this will be exposure data from EX and pharmacokinetic concentration data from PC. We will use ADSL for baseline characteristics and we will derive additional baselines from vital signs VS and laboratory data LB.\n\n# ---- Load source datasets ----\n# Load PC, EX, VS, LB and ADSL\ndata(\"pc\")\ndata(\"ex\")\ndata(\"vs\")\ndata(\"lb\")\n\ndata(\"adsl\")\n\nex &lt;- convert_blanks_to_na(ex)\npc &lt;- convert_blanks_to_na(pc)\nvs &lt;- convert_blanks_to_na(vs)\nlb &lt;- convert_blanks_to_na(lb)\n/home/runner/work/examples/examples/adam/adppk.R",
    "crumbs": [
      "ADAM",
      "ADPPK"
    ]
  },
  {
    "objectID": "adam/adppk.html#derivations",
    "href": "adam/adppk.html#derivations",
    "title": "ADPPK",
    "section": "Derivations",
    "text": "Derivations\n\nDerive PC Dates\nHere we use {admiral} functions for working with dates and we will also create a nominal time from first dose NFRLT for PC data based on PCTPTNUM.\n\n# ---- Derivations ----\n\n# Get list of ADSL vars required for derivations\nadsl_vars &lt;- exprs(TRTSDT, TRTSDTM, TRT01P, TRT01A)\n\npc_dates &lt;- pc %&gt;%\n  # Join ADSL with PC (need TRTSDT for ADY derivation)\n  derive_vars_merged(\n    dataset_add = adsl,\n    new_vars = adsl_vars,\n    by_vars = exprs(STUDYID, USUBJID)\n  ) %&gt;%\n  # Derive analysis date/time\n  # Impute missing time to 00:00:00\n  derive_vars_dtm(\n    new_vars_prefix = \"A\",\n    dtc = PCDTC,\n    time_imputation = \"00:00:00\"\n  ) %&gt;%\n  # Derive dates and times from date/times\n  derive_vars_dtm_to_dt(exprs(ADTM)) %&gt;%\n  derive_vars_dtm_to_tm(exprs(ADTM)) %&gt;%\n  # Derive event ID and nominal relative time from first dose (NFRLT)\n  mutate(\n    EVID = 0,\n    DRUG = PCTEST,\n    NFRLT = if_else(PCTPTNUM &lt; 0, 0, PCTPTNUM), .after = USUBJID\n  )\n/home/runner/work/examples/examples/adam/adppk.R\n\n\n\nGet Dosing Information\nHere we also create nominal time from first dose NFRLT for EX data based on VISITDY.\n\n# ---- Get dosing information ----\n\nex_dates &lt;- ex %&gt;%\n  derive_vars_merged(\n    dataset_add = adsl,\n    new_vars = adsl_vars,\n    by_vars = exprs(STUDYID, USUBJID)\n  ) %&gt;%\n  # Keep records with nonzero dose\n  filter(EXDOSE &gt; 0) %&gt;%\n  # Add time and set missing end date to start date\n  # Impute missing time to 00:00:00\n  # Note all times are missing for dosing records in this example data\n  # Derive Analysis Start and End Dates\n  derive_vars_dtm(\n    new_vars_prefix = \"AST\",\n    dtc = EXSTDTC,\n    time_imputation = \"00:00:00\"\n  ) %&gt;%\n  derive_vars_dtm(\n    new_vars_prefix = \"AEN\",\n    dtc = EXENDTC,\n    time_imputation = \"00:00:00\"\n  ) %&gt;%\n  # Derive event ID and nominal relative time from first dose (NFRLT)\n  mutate(\n    EVID = 1,\n    NFRLT = case_when(\n      VISITDY == 1 ~ 0,\n      TRUE ~ 24 * VISITDY\n    )\n  ) %&gt;%\n  # Set missing end dates to start date\n  mutate(AENDTM = case_when(\n    is.na(AENDTM) ~ ASTDTM,\n    TRUE ~ AENDTM\n  )) %&gt;%\n  # Derive dates from date/times\n  derive_vars_dtm_to_dt(exprs(ASTDTM)) %&gt;%\n  derive_vars_dtm_to_dt(exprs(AENDTM))\n/home/runner/work/examples/examples/adam/adppk.R\n\n\n\nExpand Dosing Records\nSince there is a start date and end date for dosing records we need to expand the dosing records between the start date and end date using the function admiral::create_single_dose_dataset().\n\nex_exp &lt;- ex_dates %&gt;%\n  create_single_dose_dataset(\n    dose_freq = EXDOSFRQ,\n    start_date = ASTDT,\n    start_datetime = ASTDTM,\n    end_date = AENDT,\n    end_datetime = AENDTM,\n    nominal_time = NFRLT,\n    lookup_table = dose_freq_lookup,\n    lookup_column = CDISC_VALUE,\n    keep_source_vars = exprs(\n      STUDYID, USUBJID, EVID, EXDOSFRQ, EXDOSFRM,\n      NFRLT, EXDOSE, EXDOSU, EXTRT, ASTDT, ASTDTM, AENDT, AENDTM,\n      VISIT, VISITNUM, VISITDY,\n      TRT01A, TRT01P, DOMAIN, EXSEQ, !!!adsl_vars\n    )\n  ) %&gt;%\n  # Derive AVISIT based on nominal relative time\n  # Derive AVISITN to nominal time in whole days using integer division\n  # Define AVISIT based on nominal day\n  mutate(\n    AVISITN = NFRLT %/% 24 + 1,\n    AVISIT = paste(\"Day\", AVISITN),\n    ADTM = ASTDTM,\n    DRUG = EXTRT\n  ) %&gt;%\n  # Derive dates and times from datetimes\n  derive_vars_dtm_to_dt(exprs(ADTM)) %&gt;%\n  derive_vars_dtm_to_tm(exprs(ADTM)) %&gt;%\n  derive_vars_dtm_to_tm(exprs(ASTDTM)) %&gt;%\n  derive_vars_dtm_to_tm(exprs(AENDTM))\n/home/runner/work/examples/examples/adam/adppk.R\n\n\n\nFind First Dose\nIn this section we will find the first dose for each subject and drug.\n\n# ---- Find first dose per treatment per subject ----\n# ---- Join with ADPPK data and keep only subjects with dosing ----\n\nadppk_first_dose &lt;- pc_dates %&gt;%\n  derive_vars_merged(\n    dataset_add = ex_exp,\n    filter_add = (!is.na(ADTM)),\n    new_vars = exprs(FANLDTM = ADTM, EXDOSE_first = EXDOSE),\n    order = exprs(ADTM, EXSEQ),\n    mode = \"first\",\n    by_vars = exprs(STUDYID, USUBJID, DRUG)\n  ) %&gt;%\n  filter(!is.na(FANLDTM)) %&gt;%\n  # Derive AVISIT based on nominal relative time\n  # Derive AVISITN to nominal time in whole days using integer division\n  # Define AVISIT based on nominal day\n  mutate(\n    AVISITN = NFRLT %/% 24 + 1,\n    AVISIT = paste(\"Day\", AVISITN),\n  )\n/home/runner/work/examples/examples/adam/adppk.R\n\n\n\nFind Previous Dose\nFor ADPPK we will find the previous dose with respect to actual time and nominal time.\n\n# ---- Find previous dose  ----\n\nadppk_prev &lt;- adppk_first_dose %&gt;%\n  derive_vars_joined(\n    dataset_add = ex_exp,\n    by_vars = exprs(USUBJID),\n    order = exprs(ADTM),\n    new_vars = exprs(\n      ADTM_prev = ADTM, EXDOSE_prev = EXDOSE, AVISIT_prev = AVISIT,\n      AENDTM_prev = AENDTM\n    ),\n    join_vars = exprs(ADTM),\n    join_type = \"all\",\n    filter_add = NULL,\n    filter_join = ADTM &gt; ADTM.join,\n    mode = \"last\",\n    check_type = \"none\"\n  )\n/home/runner/work/examples/examples/adam/adppk.R\n\n\n\nFind Previous Nominal Dose\n\nadppk_nom_prev &lt;- adppk_prev %&gt;%\n  derive_vars_joined(\n    dataset_add = ex_exp,\n    by_vars = exprs(USUBJID),\n    order = exprs(NFRLT),\n    new_vars = exprs(NFRLT_prev = NFRLT),\n    join_vars = exprs(NFRLT),\n    join_type = \"all\",\n    filter_add = NULL,\n    filter_join = NFRLT &gt; NFRLT.join,\n    mode = \"last\",\n    check_type = \"none\"\n  )\n/home/runner/work/examples/examples/adam/adppk.R\n\n\n\nCombine PC and EX Data\nHere we combine PC and EX records. We will derive the relative time variables AFRLT (Actual Relative Time from First Dose), APRLT (Actual Relative Time from Previous Dose), and NPRLT (Nominal Relative Time from Previous Dose).\n\nadppk_aprlt &lt;- bind_rows(adppk_nom_prev, ex_exp) %&gt;%\n  group_by(USUBJID, DRUG) %&gt;%\n  mutate(\n    FANLDTM = min(FANLDTM, na.rm = TRUE),\n    min_NFRLT = min(NFRLT, na.rm = TRUE),\n    maxdate = max(ADT[EVID == 0], na.rm = TRUE), .after = USUBJID\n  ) %&gt;%\n  arrange(USUBJID, ADTM) %&gt;%\n  ungroup() %&gt;%\n  filter(ADT &lt;= maxdate) %&gt;%\n  # Derive Actual Relative Time from First Dose (AFRLT)\n  derive_vars_duration(\n    new_var = AFRLT,\n    start_date = FANLDTM,\n    end_date = ADTM,\n    out_unit = \"hours\",\n    floor_in = FALSE,\n    add_one = FALSE\n  ) %&gt;%\n  # Derive Actual Relative Time from Reference Dose (APRLT)\n  derive_vars_duration(\n    new_var = APRLT,\n    start_date = ADTM_prev,\n    end_date = ADTM,\n    out_unit = \"hours\",\n    floor_in = FALSE,\n    add_one = FALSE\n  ) %&gt;%\n  # Derive APRLT\n  mutate(\n    APRLT = case_when(\n      EVID == 1 ~ 0,\n      is.na(APRLT) ~ AFRLT,\n      TRUE ~ APRLT\n    ),\n    NPRLT = case_when(\n      EVID == 1 ~ 0,\n      is.na(NFRLT_prev) ~ NFRLT - min_NFRLT,\n      TRUE ~ NFRLT - NFRLT_prev\n    )\n  )\n/home/runner/work/examples/examples/adam/adppk.R\n\n\n\nDerive Analysis Variables\nThe expected analysis variable for ADPPK is DV or dependent variable. For this example DV is set to the numeric concentration value PCSTRESN. We will also include AVAL equivalent to DV for consistency with CDISC ADaM standards. MDV missing dependent variable will also be included.\n\n# ---- Derive Analysis Variables ----\n# Derive actual dose DOSEA and planned dose DOSEP,\n# Derive AVAL and DV\n\nadppk_aval &lt;- adppk_aprlt %&gt;%\n  mutate(\n    # Derive Actual Dose\n    DOSEA = case_when(\n      EVID == 1 ~ EXDOSE,\n      is.na(EXDOSE_prev) ~ EXDOSE_first,\n      TRUE ~ EXDOSE_prev\n    ),\n    # Derive Planned Dose\n    DOSEP = case_when(\n      TRT01P == \"Xanomeline High Dose\" ~ 81,\n      TRT01P == \"Xanomeline Low Dose\" ~ 54,\n      TRT01P == \"Placebo\" ~ 0\n    ),\n    # Derive PARAMCD\n    PARAMCD = case_when(\n      EVID == 1 ~ \"DOSE\",\n      TRUE ~ PCTESTCD\n    ),\n    ALLOQ = PCLLOQ,\n    # Derive CMT\n    CMT = case_when(\n      EVID == 1 ~ 1,\n      PCSPEC == \"PLASMA\" ~ 2,\n      TRUE ~ 3\n    ),\n    # Derive BLQFL/BLQFN\n    BLQFL = case_when(\n      PCSTRESC == \"&lt;BLQ\" ~ \"Y\",\n      TRUE ~ \"N\"\n    ),\n    BLQFN = case_when(\n      PCSTRESC == \"&lt;BLQ\" ~ 1,\n      TRUE ~ 0\n    ),\n    AMT = case_when(\n      EVID == 1 ~ EXDOSE,\n      TRUE ~ NA_real_\n    ),\n    # Derive DV and AVAL\n    DV = PCSTRESN,\n    DVID = PCTESTCD,\n    AVAL = DV,\n    DVL = case_when(\n      DV != 0 ~ log(DV),\n      TRUE ~ NA_real_\n    ),\n    # Derive MDV\n    MDV = case_when(\n      EVID == 1 ~ 1,\n      is.na(DV) ~ 1,\n      TRUE ~ 0\n    ),\n    AVALU = case_when(\n      EVID == 1 ~ NA_character_,\n      TRUE ~ PCSTRESU\n    ),\n    RLTU = \"h\",\n    USTRESC = PCSTRESC,\n    UDTC = format_ISO8601(ADTM),\n    II = if_else(EVID == 1, 1, 0),\n    SS = if_else(EVID == 1, 1, 0),\n    ADDL = 0,\n    OCC = 1,\n  )\n/home/runner/work/examples/examples/adam/adppk.R\n\n\n\nAdd ASEQ\n\n# ---- Add ASEQ ----\n\nadppk_aseq &lt;- adppk_aval %&gt;%\n  # Calculate ASEQ\n  derive_var_obs_number(\n    new_var = ASEQ,\n    by_vars = exprs(STUDYID, USUBJID),\n    order = exprs(AFRLT, EVID, CMT),\n    check_type = \"error\"\n  ) %&gt;%\n  mutate(\n    PROJID = DRUG,\n    PROJIDN = 1,\n    PART = 1,\n  )\n/home/runner/work/examples/examples/adam/adppk.R",
    "crumbs": [
      "ADAM",
      "ADPPK"
    ]
  },
  {
    "objectID": "adam/adppk.html#derive-covariates-using-metatools",
    "href": "adam/adppk.html#derive-covariates-using-metatools",
    "title": "ADPPK",
    "section": "Derive Covariates Using {metatools}",
    "text": "Derive Covariates Using {metatools}\nIn this step we will create our numeric covariates using the metatools::create_var_from_codelist() function.\n\n#---- Derive Covariates ----\n# Include numeric values for STUDYIDN, USUBJIDN, SEXN, RACEN etc.\n\ncovar &lt;- adsl %&gt;%\n  create_var_from_codelist(metacore, input_var = STUDYID, out_var = STUDYIDN) %&gt;%\n  create_var_from_codelist(metacore, input_var = SEX, out_var = SEXN) %&gt;%\n  create_var_from_codelist(metacore, input_var = RACE, out_var = RACEN) %&gt;%\n  create_var_from_codelist(metacore, input_var = ETHNIC, out_var = AETHNIC) %&gt;%\n  create_var_from_codelist(metacore, input_var = AETHNIC, out_var = AETHNICN) %&gt;%\n  create_var_from_codelist(metacore, input_var = ARMCD, out_var = COHORT) %&gt;%\n  create_var_from_codelist(metacore, input_var = ARMCD, out_var = COHORTC) %&gt;%\n  create_var_from_codelist(metacore, input_var = COUNTRY, out_var = COUNTRYN) %&gt;%\n  create_var_from_codelist(metacore, input_var = COUNTRY, out_var = COUNTRYL) %&gt;%\n  mutate(\n    STUDYIDN = as.numeric(word(USUBJID, 1, sep = fixed(\"-\"))),\n    SITEIDN = as.numeric(word(USUBJID, 2, sep = fixed(\"-\"))),\n    USUBJIDN = as.numeric(word(USUBJID, 3, sep = fixed(\"-\"))),\n    SUBJIDN = as.numeric(SUBJID),\n    ROUTE = unique(ex$EXROUTE),\n    FORM = unique(ex$EXDOSFRM),\n    REGION1 = COUNTRY,\n    REGION1N = COUNTRYN,\n    SUBJTYPC = \"Volunteer\",\n  ) %&gt;%\n  create_var_from_codelist(metacore, input_var = FORM, out_var = FORMN) %&gt;%\n  create_var_from_codelist(metacore, input_var = ROUTE, out_var = ROUTEN) %&gt;%\n  create_var_from_codelist(metacore, input_var = SUBJTYPC, out_var = SUBJTYP)\n/home/runner/work/examples/examples/adam/adppk.R\n\n\nDerive Additional Baselines\nNext we add additional baselines from vital signs and laboratory data.\n\nlabsbl &lt;- lb %&gt;%\n  filter(LBBLFL == \"Y\" & LBTESTCD %in% c(\"CREAT\", \"ALT\", \"AST\", \"BILI\")) %&gt;%\n  mutate(LBTESTCDB = paste0(LBTESTCD, \"BL\")) %&gt;%\n  select(STUDYID, USUBJID, LBTESTCDB, LBSTRESN)\n\ncovar_vslb &lt;- covar %&gt;%\n  derive_vars_merged(\n    dataset_add = vs,\n    filter_add = VSTESTCD == \"HEIGHT\",\n    by_vars = exprs(STUDYID, USUBJID),\n    new_vars = exprs(HTBL = VSSTRESN)\n  ) %&gt;%\n  derive_vars_merged(\n    dataset_add = vs,\n    filter_add = VSTESTCD == \"WEIGHT\" & VSBLFL == \"Y\",\n    by_vars = exprs(STUDYID, USUBJID),\n    new_vars = exprs(WTBL = VSSTRESN)\n  ) %&gt;%\n  derive_vars_transposed(\n    dataset_merge = labsbl,\n    by_vars = exprs(STUDYID, USUBJID),\n    key_var = LBTESTCDB,\n    value_var = LBSTRESN\n  ) %&gt;%\n  mutate(\n    BMIBL = compute_bmi(height = HTBL, weight = WTBL),\n    BSABL = compute_bsa(\n      height = HTBL,\n      weight = HTBL,\n      method = \"Mosteller\"\n    ),\n    CRCLBL = compute_egfr(\n      creat = CREATBL, creatu = \"SI\", age = AGE, weight = WTBL, sex = SEX,\n      method = \"CRCL\"\n    ),\n    EGFRBL = compute_egfr(\n      creat = CREATBL, creatu = \"SI\", age = AGE, weight = WTBL, sex = SEX,\n      method = \"CKD-EPI\"\n    )\n  ) %&gt;%\n  rename(TBILBL = BILIBL)\n/home/runner/work/examples/examples/adam/adppk.R\n\n\n\nCombine with Covariates\nWe combine our covariates with the rest of the data\n\n# Combine covariates with APPPK data\n\nadppk_prefinal &lt;- adppk_aseq %&gt;%\n  derive_vars_merged(\n    dataset_add = select(covar_vslb, !!!negate_vars(adsl_vars)),\n    by_vars = exprs(STUDYID, USUBJID)\n  ) %&gt;%\n  arrange(STUDYIDN, USUBJIDN, AFRLT, EVID) %&gt;%\n  # Add RECSEQ\n  # Exclude records if needed\n  mutate(\n    RECSEQ = row_number(),\n    EXCLFCOM = \"None\"\n  ) %&gt;%\n  create_var_from_codelist(metacore, input_var = DVID, out_var = DVIDN) %&gt;%\n  create_var_from_codelist(metacore, input_var = EXCLFCOM, out_var = EXCLF)\n/home/runner/work/examples/examples/adam/adppk.R",
    "crumbs": [
      "ADAM",
      "ADPPK"
    ]
  },
  {
    "objectID": "adam/adppk.html#check-data-with-metacore-and-metatools",
    "href": "adam/adppk.html#check-data-with-metacore-and-metatools",
    "title": "ADPPK",
    "section": "Check Data With metacore and metatools",
    "text": "Check Data With metacore and metatools\nWe use {metacore} objects with {metatools} functions to perform a number of checks on the data. We will drop variables not in the specs and make sure all the variables from the specs are included.\n\nadppk &lt;- adppk_prefinal %&gt;%\n  drop_unspec_vars(metacore) %&gt;% # Drop unspecified variables from specs\n  check_variables(metacore) %&gt;% # Check all variables specified are present and no more\n  check_ct_data(metacore) %&gt;% # Checks all variables with CT only contain values within the CT\n  order_cols(metacore) %&gt;% # Orders the columns according to the spec\n  sort_by_key(metacore) # Sorts the rows by the sort keys\n/home/runner/work/examples/examples/adam/adppk.R",
    "crumbs": [
      "ADAM",
      "ADPPK"
    ]
  },
  {
    "objectID": "adam/adppk.html#apply-labels-and-formats-with-xportr",
    "href": "adam/adppk.html#apply-labels-and-formats-with-xportr",
    "title": "ADPPK",
    "section": "Apply Labels and Formats with xportr",
    "text": "Apply Labels and Formats with xportr\nUsing {xportr} we check variable type, assign variable lenght, add variable labels, add variable formats, and save a transport file with xportr::xportr_write().\n\ndir &lt;- tempdir() # Change to whichever directory you want to save the dataset in\n\nadppk_xpt &lt;- adppk %&gt;%\n  xportr_type(metacore, domain = \"ADPPK\") %&gt;% # Coerce variable type to match spec\n  xportr_length(metacore) %&gt;% # Assigns SAS length from a variable level metadata\n  xportr_label(metacore) %&gt;% # Assigns variable label from metacore specifications\n  xportr_format(metacore) %&gt;% # Assigns variable format from metacore specifications\n  xportr_df_label(metacore) %&gt;% # Assigns dataset label from metacore specifications\n  xportr_write(file.path(dir, \"adppk.xpt\")) # Write xpt v5 transport file\n/home/runner/work/examples/examples/adam/adppk.R",
    "crumbs": [
      "ADAM",
      "ADPPK"
    ]
  },
  {
    "objectID": "sdtm/examples.html",
    "href": "sdtm/examples.html",
    "title": "SDTM Examples",
    "section": "",
    "text": "For SDTM mapping, there is currently an industry collaboration supported by CDISC for the {roak} R package. Read more here.\nOnce this completes and the package is made available as open source, we will be able to add examples showcasing how best to use this alongside other pharmaverse packages in this space - such as {datacutr} and {sdtmchecks}.",
    "crumbs": [
      "SDTM",
      "SDTM Examples"
    ]
  }
]